version: 5.5.0
types:
    -
        name: Update
        description: 'This object represents an incoming update.At most one of the optional parameters can be present in any given update.'
        fields:
            -
                name: update_id
                types:
                    - int
                optional: false
                description: 'The update''s unique identifier. Update identifiers start from a certain positive number and increase sequentially. This ID becomes especially handy if you''re using Webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.'
            -
                name: message
                types:
                    - Message
                optional: true
                description: 'Optional. New incoming message of any kind — text, photo, sticker, etc.'
            -
                name: edited_message
                types:
                    - Message
                optional: true
                description: 'Optional. New version of a message that is known to the bot and was edited'
            -
                name: channel_post
                types:
                    - Message
                optional: true
                description: 'Optional. New incoming channel post of any kind — text, photo, sticker, etc.'
            -
                name: edited_channel_post
                types:
                    - Message
                optional: true
                description: 'Optional. New version of a channel post that is known to the bot and was edited'
            -
                name: inline_query
                types:
                    - InlineQuery
                optional: true
                description: 'Optional. New incoming inline query'
            -
                name: chosen_inline_result
                types:
                    - ChosenInlineResult
                optional: true
                description: 'Optional. The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.'
            -
                name: callback_query
                types:
                    - CallbackQuery
                optional: true
                description: 'Optional. New incoming callback query'
            -
                name: shipping_query
                types:
                    - ShippingQuery
                optional: true
                description: 'Optional. New incoming shipping query. Only for invoices with flexible price'
            -
                name: pre_checkout_query
                types:
                    - PreCheckoutQuery
                optional: true
                description: 'Optional. New incoming pre-checkout query. Contains full information about checkout'
            -
                name: poll
                types:
                    - Poll
                optional: true
                description: 'Optional. New poll state. Bots receive only updates about stopped polls and polls, which are sent by the bot'
            -
                name: poll_answer
                types:
                    - PollAnswer
                optional: true
                description: 'Optional. A user changed their answer in a non-anonymous poll. Bots receive new votes only in polls that were sent by the bot itself.'
            -
                name: my_chat_member
                types:
                    - ChatMemberUpdated
                optional: true
                description: 'Optional. The bot''s chat member status was updated in a chat. For private chats, this update is received only when the bot is blocked or unblocked by the user.'
            -
                name: chat_member
                types:
                    - ChatMemberUpdated
                optional: true
                description: 'Optional. A chat member''s status was updated in a chat. The bot must be an administrator in the chat and must explicitly specify “chat_member” in the list of allowed_updates to receive these updates.'
            -
                name: chat_join_request
                types:
                    - ChatJoinRequest
                optional: true
                description: 'Optional. A request to join the chat has been sent. The bot must have the can_invite_users administrator right in the chat to receive these updates.'
        extended_by: {  }
    -
        name: WebhookInfo
        description: 'Contains information about the current status of a webhook.'
        fields:
            -
                name: url
                types:
                    - string
                optional: false
                description: 'Webhook URL, may be empty if webhook is not set up'
            -
                name: has_custom_certificate
                types:
                    - bool
                optional: false
                description: 'True, if a custom certificate was provided for webhook certificate checks'
            -
                name: pending_update_count
                types:
                    - int
                optional: false
                description: 'Number of updates awaiting delivery'
            -
                name: ip_address
                types:
                    - string
                optional: true
                description: 'Optional. Currently used webhook IP address'
            -
                name: last_error_date
                types:
                    - int
                optional: true
                description: 'Optional. Unix time for the most recent error that happened when trying to deliver an update via webhook'
            -
                name: last_error_message
                types:
                    - string
                optional: true
                description: 'Optional. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook'
            -
                name: max_connections
                types:
                    - int
                optional: true
                description: 'Optional. Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery'
            -
                name: allowed_updates
                types:
                    - Array<string>
                optional: true
                description: 'Optional. A list of update types the bot is subscribed to. Defaults to all update types except chat_member'
        extended_by: {  }
    -
        name: User
        description: 'This object represents a Telegram user or bot.'
        fields:
            -
                name: id
                types:
                    - int
                optional: false
                description: 'Unique identifier for this user or bot. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: is_bot
                types:
                    - bool
                optional: false
                description: 'True, if this user is a bot'
            -
                name: first_name
                types:
                    - string
                optional: false
                description: 'User''s or bot''s first name'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Optional. User''s or bot''s last name'
            -
                name: username
                types:
                    - string
                optional: true
                description: 'Optional. User''s or bot''s username'
            -
                name: language_code
                types:
                    - string
                optional: true
                description: 'Optional. IETF language tag of the user''s language'
            -
                name: can_join_groups
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the bot can be invited to groups. Returned only in getMe.'
            -
                name: can_read_all_group_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if privacy mode is disabled for the bot. Returned only in getMe.'
            -
                name: supports_inline_queries
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the bot supports inline queries. Returned only in getMe.'
        extended_by: {  }
    -
        name: Chat
        description: 'This object represents a chat.'
        fields:
            -
                name: id
                types:
                    - int
                optional: false
                description: 'Unique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of chat, can be either “private”, “group”, “supergroup” or “channel”'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title, for supergroups, channels and group chats'
            -
                name: username
                types:
                    - string
                optional: true
                description: 'Optional. Username, for private chats, supergroups and channels if available'
            -
                name: first_name
                types:
                    - string
                optional: true
                description: 'Optional. First name of the other party in a private chat'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Optional. Last name of the other party in a private chat'
            -
                name: photo
                types:
                    - ChatPhoto
                optional: true
                description: 'Optional. Chat photo. Returned only in getChat.'
            -
                name: bio
                types:
                    - string
                optional: true
                description: 'Optional. Bio of the other party in a private chat. Returned only in getChat.'
            -
                name: has_private_forwards
                types:
                    - bool
                optional: true
                description: 'Optional. True, if privacy settings of the other party in the private chat allows to use tg://user?id=<user_id> links only in chats with the user. Returned only in getChat.'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Description, for groups, supergroups and channel chats. Returned only in getChat.'
            -
                name: invite_link
                types:
                    - string
                optional: true
                description: 'Optional. Primary invite link, for groups, supergroups and channel chats. Returned only in getChat.'
            -
                name: pinned_message
                types:
                    - Message
                optional: true
                description: 'Optional. The most recent pinned message (by sending date). Returned only in getChat.'
            -
                name: permissions
                types:
                    - ChatPermissions
                optional: true
                description: 'Optional. Default chat member permissions, for groups and supergroups. Returned only in getChat.'
            -
                name: slow_mode_delay
                types:
                    - int
                optional: true
                description: 'Optional. For supergroups, the minimum allowed delay between consecutive messages sent by each unpriviledged user; in seconds. Returned only in getChat.'
            -
                name: message_auto_delete_time
                types:
                    - int
                optional: true
                description: 'Optional. The time after which all messages sent to the chat will be automatically deleted; in seconds. Returned only in getChat.'
            -
                name: has_protected_content
                types:
                    - bool
                optional: true
                description: 'Optional. True, if messages from the chat can''t be forwarded to other chats. Returned only in getChat.'
            -
                name: sticker_set_name
                types:
                    - string
                optional: true
                description: 'Optional. For supergroups, name of group sticker set. Returned only in getChat.'
            -
                name: can_set_sticker_set
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the bot can change the group sticker set. Returned only in getChat.'
            -
                name: linked_chat_id
                types:
                    - int
                optional: true
                description: 'Optional. Unique identifier for the linked chat, i.e. the discussion group identifier for a channel and vice versa; for supergroups and channel chats. This identifier may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier. Returned only in getChat.'
            -
                name: location
                types:
                    - ChatLocation
                optional: true
                description: 'Optional. For supergroups, the location to which the supergroup is connected. Returned only in getChat.'
        extended_by: {  }
    -
        name: Message
        description: 'This object represents a message.'
        fields:
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Unique message identifier inside this chat'
            -
                name: from
                types:
                    - User
                optional: true
                description: 'Optional. Sender, empty for messages sent to channels'
            -
                name: sender_chat
                types:
                    - Chat
                optional: true
                description: 'Optional. Sender of the message, sent on behalf of a chat. The channel itself for channel messages. The supergroup itself for messages from anonymous group administrators. The linked channel for messages automatically forwarded to the discussion group'
            -
                name: date
                types:
                    - int
                optional: false
                description: 'Date the message was sent in Unix time'
            -
                name: chat
                types:
                    - Chat
                optional: false
                description: 'Conversation the message belongs to'
            -
                name: forward_from
                types:
                    - User
                optional: true
                description: 'Optional. For forwarded messages, sender of the original message'
            -
                name: forward_from_chat
                types:
                    - Chat
                optional: true
                description: 'Optional. For messages forwarded from channels or from anonymous administrators, information about the original sender chat'
            -
                name: forward_from_message_id
                types:
                    - int
                optional: true
                description: 'Optional. For messages forwarded from channels, identifier of the original message in the channel'
            -
                name: forward_signature
                types:
                    - string
                optional: true
                description: 'Optional. For messages forwarded from channels, signature of the post author if present'
            -
                name: forward_sender_name
                types:
                    - string
                optional: true
                description: 'Optional. Sender''s name for messages forwarded from users who disallow adding a link to their account in forwarded messages'
            -
                name: forward_date
                types:
                    - int
                optional: true
                description: 'Optional. For forwarded messages, date the original message was sent in Unix time'
            -
                name: is_automatic_forward
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the message is a channel post that was automatically forwarded to the connected discussion group'
            -
                name: reply_to_message
                types:
                    - Message
                optional: true
                description: 'Optional. For replies, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.'
            -
                name: via_bot
                types:
                    - User
                optional: true
                description: 'Optional. Bot through which the message was sent'
            -
                name: edit_date
                types:
                    - int
                optional: true
                description: 'Optional. Date the message was last edited in Unix time'
            -
                name: has_protected_content
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the message can''t be forwarded'
            -
                name: media_group_id
                types:
                    - string
                optional: true
                description: 'Optional. The unique identifier of a media message group this message belongs to'
            -
                name: author_signature
                types:
                    - string
                optional: true
                description: 'Optional. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator'
            -
                name: text
                types:
                    - string
                optional: true
                description: 'Optional. For text messages, the actual UTF-8 text of the message, 0-4096 characters'
            -
                name: entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text'
            -
                name: animation
                types:
                    - Animation
                optional: true
                description: 'Optional. Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set'
            -
                name: audio
                types:
                    - Audio
                optional: true
                description: 'Optional. Message is an audio file, information about the file'
            -
                name: document
                types:
                    - Document
                optional: true
                description: 'Optional. Message is a general file, information about the file'
            -
                name: photo
                types:
                    - Array<PhotoSize>
                optional: true
                description: 'Optional. Message is a photo, available sizes of the photo'
            -
                name: sticker
                types:
                    - Sticker
                optional: true
                description: 'Optional. Message is a sticker, information about the sticker'
            -
                name: video
                types:
                    - Video
                optional: true
                description: 'Optional. Message is a video, information about the video'
            -
                name: video_note
                types:
                    - VideoNote
                optional: true
                description: 'Optional. Message is a video note, information about the video message'
            -
                name: voice
                types:
                    - Voice
                optional: true
                description: 'Optional. Message is a voice message, information about the file'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption for the animation, audio, document, photo, video or voice, 0-1024 characters'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption'
            -
                name: contact
                types:
                    - Contact
                optional: true
                description: 'Optional. Message is a shared contact, information about the contact'
            -
                name: dice
                types:
                    - Dice
                optional: true
                description: 'Optional. Message is a dice with random value'
            -
                name: game
                types:
                    - Game
                optional: true
                description: 'Optional. Message is a game, information about the game. More about games »'
            -
                name: poll
                types:
                    - Poll
                optional: true
                description: 'Optional. Message is a native poll, information about the poll'
            -
                name: venue
                types:
                    - Venue
                optional: true
                description: 'Optional. Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set'
            -
                name: location
                types:
                    - Location
                optional: true
                description: 'Optional. Message is a shared location, information about the location'
            -
                name: new_chat_members
                types:
                    - Array<User>
                optional: true
                description: 'Optional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)'
            -
                name: left_chat_member
                types:
                    - User
                optional: true
                description: 'Optional. A member was removed from the group, information about them (this member may be the bot itself)'
            -
                name: new_chat_title
                types:
                    - string
                optional: true
                description: 'Optional. A chat title was changed to this value'
            -
                name: new_chat_photo
                types:
                    - Array<PhotoSize>
                optional: true
                description: 'Optional. A chat photo was change to this value'
            -
                name: delete_chat_photo
                types:
                    - bool
                optional: true
                description: 'Optional. Service message: the chat photo was deleted'
            -
                name: group_chat_created
                types:
                    - bool
                optional: true
                description: 'Optional. Service message: the group has been created'
            -
                name: supergroup_chat_created
                types:
                    - bool
                optional: true
                description: 'Optional. Service message: the supergroup has been created. This field can''t be received in a message coming through updates, because bot can''t be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.'
            -
                name: channel_chat_created
                types:
                    - bool
                optional: true
                description: 'Optional. Service message: the channel has been created. This field can''t be received in a message coming through updates, because bot can''t be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.'
            -
                name: message_auto_delete_timer_changed
                types:
                    - MessageAutoDeleteTimerChanged
                optional: true
                description: 'Optional. Service message: auto-delete timer settings changed in the chat'
            -
                name: migrate_to_chat_id
                types:
                    - int
                optional: true
                description: 'Optional. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: migrate_from_chat_id
                types:
                    - int
                optional: true
                description: 'Optional. The supergroup has been migrated from a group with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: pinned_message
                types:
                    - Message
                optional: true
                description: 'Optional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it is itself a reply.'
            -
                name: invoice
                types:
                    - Invoice
                optional: true
                description: 'Optional. Message is an invoice for a payment, information about the invoice. More about payments »'
            -
                name: successful_payment
                types:
                    - SuccessfulPayment
                optional: true
                description: 'Optional. Message is a service message about a successful payment, information about the payment. More about payments »'
            -
                name: connected_website
                types:
                    - string
                optional: true
                description: 'Optional. The domain name of the website on which the user has logged in. More about Telegram Login »'
            -
                name: passport_data
                types:
                    - PassportData
                optional: true
                description: 'Optional. Telegram Passport data'
            -
                name: proximity_alert_triggered
                types:
                    - ProximityAlertTriggered
                optional: true
                description: 'Optional. Service message. A user in the chat triggered another user''s proximity alert while sharing Live Location.'
            -
                name: voice_chat_scheduled
                types:
                    - VoiceChatScheduled
                optional: true
                description: 'Optional. Service message: voice chat scheduled'
            -
                name: voice_chat_started
                types:
                    - VoiceChatStarted
                optional: true
                description: 'Optional. Service message: voice chat started'
            -
                name: voice_chat_ended
                types:
                    - VoiceChatEnded
                optional: true
                description: 'Optional. Service message: voice chat ended'
            -
                name: voice_chat_participants_invited
                types:
                    - VoiceChatParticipantsInvited
                optional: true
                description: 'Optional. Service message: new participants invited to a voice chat'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons.'
        extended_by: {  }
    -
        name: MessageId
        description: 'This object represents a unique message identifier.'
        fields:
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Unique message identifier'
        extended_by: {  }
    -
        name: MessageEntity
        description: 'This object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the entity. Can be “mention” (@username), “hashtag” (#hashtag), “cashtag” ($USD), “bot_command” (/start@jobs_bot), “url” (https://telegram.org), “email” (do-not-reply@telegram.org), “phone_number” (+1-212-555-0123), “bold” (bold text), “italic” (italic text), “underline” (underlined text), “strikethrough” (strikethrough text), “code” (monowidth string), “pre” (monowidth block), “text_link” (for clickable text URLs), “text_mention” (for users without usernames)'
            -
                name: offset
                types:
                    - int
                optional: false
                description: 'Offset in UTF-16 code units to the start of the entity'
            -
                name: length
                types:
                    - int
                optional: false
                description: 'Length of the entity in UTF-16 code units'
            -
                name: url
                types:
                    - string
                optional: true
                description: 'Optional. For “text_link” only, url that will be opened after user taps on the text'
            -
                name: user
                types:
                    - User
                optional: true
                description: 'Optional. For “text_mention” only, the mentioned user'
            -
                name: language
                types:
                    - string
                optional: true
                description: 'Optional. For “pre” only, the programming language of the entity text'
        extended_by: {  }
    -
        name: PhotoSize
        description: 'This object represents one size of a photo or a file / sticker thumbnail.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: width
                types:
                    - int
                optional: false
                description: 'Photo width'
            -
                name: height
                types:
                    - int
                optional: false
                description: 'Photo height'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: Animation
        description: 'This object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: width
                types:
                    - int
                optional: false
                description: 'Video width as defined by sender'
            -
                name: height
                types:
                    - int
                optional: false
                description: 'Video height as defined by sender'
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Duration of the video in seconds as defined by sender'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Animation thumbnail as defined by sender'
            -
                name: file_name
                types:
                    - string
                optional: true
                description: 'Optional. Original animation filename as defined by sender'
            -
                name: mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the file as defined by sender'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: Audio
        description: 'This object represents an audio file to be treated as music by the Telegram clients.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Duration of the audio in seconds as defined by sender'
            -
                name: performer
                types:
                    - string
                optional: true
                description: 'Optional. Performer of the audio as defined by sender or by audio tags'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title of the audio as defined by sender or by audio tags'
            -
                name: file_name
                types:
                    - string
                optional: true
                description: 'Optional. Original filename as defined by sender'
            -
                name: mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the file as defined by sender'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Thumbnail of the album cover to which the music file belongs'
        extended_by: {  }
    -
        name: Document
        description: 'This object represents a general file (as opposed to photos, voice messages and audio files).'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Document thumbnail as defined by sender'
            -
                name: file_name
                types:
                    - string
                optional: true
                description: 'Optional. Original filename as defined by sender'
            -
                name: mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the file as defined by sender'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: Video
        description: 'This object represents a video file.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: width
                types:
                    - int
                optional: false
                description: 'Video width as defined by sender'
            -
                name: height
                types:
                    - int
                optional: false
                description: 'Video height as defined by sender'
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Duration of the video in seconds as defined by sender'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Video thumbnail'
            -
                name: file_name
                types:
                    - string
                optional: true
                description: 'Optional. Original filename as defined by sender'
            -
                name: mime_type
                types:
                    - string
                optional: true
                description: 'Optional. Mime type of a file as defined by sender'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: VideoNote
        description: 'This object represents a video message (available in Telegram apps as of v.4.0).'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: length
                types:
                    - int
                optional: false
                description: 'Video width and height (diameter of the video message) as defined by sender'
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Duration of the video in seconds as defined by sender'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Video thumbnail'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: Voice
        description: 'This object represents a voice note.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Duration of the audio in seconds as defined by sender'
            -
                name: mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the file as defined by sender'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: Contact
        description: 'This object represents a phone contact.'
        fields:
            -
                name: phone_number
                types:
                    - string
                optional: false
                description: 'Contact''s phone number'
            -
                name: first_name
                types:
                    - string
                optional: false
                description: 'Contact''s first name'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Optional. Contact''s last name'
            -
                name: user_id
                types:
                    - int
                optional: true
                description: 'Optional. Contact''s user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: vcard
                types:
                    - string
                optional: true
                description: 'Optional. Additional data about the contact in the form of a vCard'
        extended_by: {  }
    -
        name: Dice
        description: 'This object represents an animated emoji that displays a random value.'
        fields:
            -
                name: emoji
                types:
                    - string
                optional: false
                description: 'Emoji on which the dice throw animation is based'
            -
                name: value
                types:
                    - int
                optional: false
                description: 'Value of the dice, 1-6 for “”, “” and “” base emoji, 1-5 for “” and “” base emoji, 1-64 for “” base emoji'
        extended_by: {  }
    -
        name: PollOption
        description: 'This object contains information about one answer option in a poll.'
        fields:
            -
                name: text
                types:
                    - string
                optional: false
                description: 'Option text, 1-100 characters'
            -
                name: voter_count
                types:
                    - int
                optional: false
                description: 'Number of users that voted for this option'
        extended_by: {  }
    -
        name: PollAnswer
        description: 'This object represents an answer of a user in a non-anonymous poll.'
        fields:
            -
                name: poll_id
                types:
                    - string
                optional: false
                description: 'Unique poll identifier'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'The user, who changed the answer to the poll'
            -
                name: option_ids
                types:
                    - Array<int>
                optional: false
                description: '0-based identifiers of answer options, chosen by the user. May be empty if the user retracted their vote.'
        extended_by: {  }
    -
        name: Poll
        description: 'This object contains information about a poll.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique poll identifier'
            -
                name: question
                types:
                    - string
                optional: false
                description: 'Poll question, 1-300 characters'
            -
                name: options
                types:
                    - Array<PollOption>
                optional: false
                description: 'List of poll options'
            -
                name: total_voter_count
                types:
                    - int
                optional: false
                description: 'Total number of users that voted in the poll'
            -
                name: is_closed
                types:
                    - bool
                optional: false
                description: 'True, if the poll is closed'
            -
                name: is_anonymous
                types:
                    - bool
                optional: false
                description: 'True, if the poll is anonymous'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Poll type, currently can be “regular” or “quiz”'
            -
                name: allows_multiple_answers
                types:
                    - bool
                optional: false
                description: 'True, if the poll allows multiple answers'
            -
                name: correct_option_id
                types:
                    - int
                optional: true
                description: 'Optional. 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.'
            -
                name: explanation
                types:
                    - string
                optional: true
                description: 'Optional. Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters'
            -
                name: explanation_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. Special entities like usernames, URLs, bot commands, etc. that appear in the explanation'
            -
                name: open_period
                types:
                    - int
                optional: true
                description: 'Optional. Amount of time in seconds the poll will be active after creation'
            -
                name: close_date
                types:
                    - int
                optional: true
                description: 'Optional. Point in time (Unix timestamp) when the poll will be automatically closed'
        extended_by: {  }
    -
        name: Location
        description: 'This object represents a point on the map.'
        fields:
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude as defined by sender'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude as defined by sender'
            -
                name: horizontal_accuracy
                types:
                    - float
                optional: true
                description: 'Optional. The radius of uncertainty for the location, measured in meters; 0-1500'
            -
                name: live_period
                types:
                    - int
                optional: true
                description: 'Optional. Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only.'
            -
                name: heading
                types:
                    - int
                optional: true
                description: 'Optional. The direction in which user is moving, in degrees; 1-360. For active live locations only.'
            -
                name: proximity_alert_radius
                types:
                    - int
                optional: true
                description: 'Optional. Maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only.'
        extended_by: {  }
    -
        name: Venue
        description: 'This object represents a venue.'
        fields:
            -
                name: location
                types:
                    - Location
                optional: false
                description: 'Venue location. Can''t be a live location'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Name of the venue'
            -
                name: address
                types:
                    - string
                optional: false
                description: 'Address of the venue'
            -
                name: foursquare_id
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare identifier of the venue'
            -
                name: foursquare_type
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare type of the venue. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)'
            -
                name: google_place_id
                types:
                    - string
                optional: true
                description: 'Optional. Google Places identifier of the venue'
            -
                name: google_place_type
                types:
                    - string
                optional: true
                description: 'Optional. Google Places type of the venue. (See supported types.)'
        extended_by: {  }
    -
        name: ProximityAlertTriggered
        description: 'This object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.'
        fields:
            -
                name: traveler
                types:
                    - User
                optional: false
                description: 'User that triggered the alert'
            -
                name: watcher
                types:
                    - User
                optional: false
                description: 'User that set the alert'
            -
                name: distance
                types:
                    - int
                optional: false
                description: 'The distance between the users'
        extended_by: {  }
    -
        name: MessageAutoDeleteTimerChanged
        description: 'This object represents a service message about a change in auto-delete timer settings.'
        fields:
            -
                name: message_auto_delete_time
                types:
                    - int
                optional: false
                description: 'New auto-delete time for messages in the chat; in seconds'
        extended_by: {  }
    -
        name: VoiceChatScheduled
        description: 'This object represents a service message about a voice chat scheduled in the chat.'
        fields:
            -
                name: start_date
                types:
                    - int
                optional: false
                description: 'Point in time (Unix timestamp) when the voice chat is supposed to be started by a chat administrator'
        extended_by: {  }
    -
        name: VoiceChatStarted
        description: 'This object represents a service message about a voice chat started in the chat. Currently holds no information.'
        fields: {  }
        extended_by: {  }
    -
        name: VoiceChatEnded
        description: 'This object represents a service message about a voice chat ended in the chat.'
        fields:
            -
                name: duration
                types:
                    - int
                optional: false
                description: 'Voice chat duration in seconds'
        extended_by: {  }
    -
        name: VoiceChatParticipantsInvited
        description: 'This object represents a service message about new members invited to a voice chat.'
        fields:
            -
                name: users
                types:
                    - Array<User>
                optional: true
                description: 'Optional. New members that were invited to the voice chat'
        extended_by: {  }
    -
        name: UserProfilePhotos
        description: 'This object represent a user''s profile pictures.'
        fields:
            -
                name: total_count
                types:
                    - int
                optional: false
                description: 'Total number of profile pictures the target user has'
            -
                name: photos
                types:
                    - Array<Array<PhotoSize>>
                optional: false
                description: 'Requested profile pictures (in up to 4 sizes each)'
        extended_by: {  }
    -
        name: File
        description: 'This object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes, if known'
            -
                name: file_path
                types:
                    - string
                optional: true
                description: 'Optional. File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file.'
        extended_by: {  }
    -
        name: ReplyKeyboardMarkup
        description: 'This object represents a custom keyboard with reply options (see Introduction to bots for details and examples).'
        fields:
            -
                name: keyboard
                types:
                    - Array<Array<KeyboardButton>>
                optional: false
                description: 'Array of button rows, each represented by an Array of KeyboardButton objects'
            -
                name: resize_keyboard
                types:
                    - bool
                optional: true
                description: 'Optional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app''s standard keyboard.'
            -
                name: one_time_keyboard
                types:
                    - bool
                optional: true
                description: 'Optional. Requests clients to hide the keyboard as soon as it''s been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat – the user can press a special button in the input field to see the custom keyboard again. Defaults to false.'
            -
                name: input_field_placeholder
                types:
                    - string
                optional: true
                description: 'Optional. The placeholder to be shown in the input field when the keyboard is active; 1-64 characters'
            -
                name: selective
                types:
                    - bool
                optional: true
                description: 'Optional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot''s message is a reply (has reply_to_message_id), sender of the original message.Example: A user requests to change the bot''s language, bot replies to the request with a keyboard to select the new language. Other users in the group don''t see the keyboard.'
        extended_by: {  }
    -
        name: KeyboardButton
        description: 'This object represents one button of the reply keyboard. For simple text buttons String can be used instead of this object to specify text of the button. Optional fields request_contact, request_location, and request_poll are mutually exclusive.'
        fields:
            -
                name: text
                types:
                    - string
                optional: false
                description: 'Text of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed'
            -
                name: request_contact
                types:
                    - bool
                optional: true
                description: 'Optional. If True, the user''s phone number will be sent as a contact when the button is pressed. Available in private chats only'
            -
                name: request_location
                types:
                    - bool
                optional: true
                description: 'Optional. If True, the user''s current location will be sent when the button is pressed. Available in private chats only'
            -
                name: request_poll
                types:
                    - KeyboardButtonPollType
                optional: true
                description: 'Optional. If specified, the user will be asked to create a poll and send it to the bot when the button is pressed. Available in private chats only'
        extended_by: {  }
    -
        name: KeyboardButtonPollType
        description: 'This object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.'
        fields:
            -
                name: type
                types:
                    - string
                optional: true
                description: 'Optional. If quiz is passed, the user will be allowed to create only polls in the quiz mode. If regular is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.'
        extended_by: {  }
    -
        name: ReplyKeyboardRemove
        description: 'Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup).'
        fields:
            -
                name: remove_keyboard
                types:
                    - bool
                optional: false
                description: 'Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use one_time_keyboard in ReplyKeyboardMarkup)'
            -
                name: selective
                types:
                    - bool
                optional: true
                description: 'Optional. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot''s message is a reply (has reply_to_message_id), sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven''t voted yet.'
        extended_by: {  }
    -
        name: InlineKeyboardMarkup
        description: 'This object represents an inline keyboard that appears right next to the message it belongs to.'
        fields:
            -
                name: inline_keyboard
                types:
                    - Array<Array<InlineKeyboardButton>>
                optional: false
                description: 'Array of button rows, each represented by an Array of InlineKeyboardButton objects'
        extended_by: {  }
    -
        name: InlineKeyboardButton
        description: 'This object represents one button of an inline keyboard. You must use exactly one of the optional fields.'
        fields:
            -
                name: text
                types:
                    - string
                optional: false
                description: 'Label text on the button'
            -
                name: url
                types:
                    - string
                optional: true
                description: 'Optional. HTTP or tg:// url to be opened when the button is pressed. Links tg://user?id=<user_id> can be used to mention a user by their ID without using a username, if this is allowed by their privacy settings.'
            -
                name: login_url
                types:
                    - LoginUrl
                optional: true
                description: 'Optional. An HTTP URL used to automatically authorize the user. Can be used as a replacement for the Telegram Login Widget.'
            -
                name: callback_data
                types:
                    - string
                optional: true
                description: 'Optional. Data to be sent in a callback query to the bot when button is pressed, 1-64 bytes'
            -
                name: switch_inline_query
                types:
                    - string
                optional: true
                description: 'Optional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot''s username and the specified inline query in the input field. Can be empty, in which case just the bot''s username will be inserted.Note: This offers an easy way for users to start using your bot in inline mode when they are currently in a private chat with it. Especially useful when combined with switch_pm… actions – in this case the user will be automatically returned to the chat they switched from, skipping the chat selection screen.'
            -
                name: switch_inline_query_current_chat
                types:
                    - string
                optional: true
                description: 'Optional. If set, pressing the button will insert the bot''s username and the specified inline query in the current chat''s input field. Can be empty, in which case only the bot''s username will be inserted.This offers a quick way for the user to open your bot in inline mode in the same chat – good for selecting something from multiple options.'
            -
                name: callback_game
                types:
                    - CallbackGame
                optional: true
                description: 'Optional. Description of the game that will be launched when the user presses the button.NOTE: This type of button must always be the first button in the first row.'
            -
                name: pay
                types:
                    - bool
                optional: true
                description: 'Optional. Specify True, to send a Pay button.NOTE: This type of button must always be the first button in the first row and can only be used in invoice messages.'
        extended_by: {  }
    -
        name: LoginUrl
        description: "This object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the Telegram Login Widget when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:\nTelegram apps support these buttons as of version 5.7."
        fields:
            -
                name: url
                types:
                    - string
                optional: false
                description: 'An HTTP URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in Receiving authorization data.NOTE: You must always check the hash of the received data to verify the authentication and the integrity of the data as described in Checking authorization.'
            -
                name: forward_text
                types:
                    - string
                optional: true
                description: 'Optional. New text of the button in forwarded messages.'
            -
                name: bot_username
                types:
                    - string
                optional: true
                description: 'Optional. Username of a bot, which will be used for user authorization. See Setting up a bot for more details. If not specified, the current bot''s username will be assumed. The url''s domain must be the same as the domain linked with the bot. See Linking your domain to the bot for more details.'
            -
                name: request_write_access
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True to request the permission for your bot to send messages to the user.'
        extended_by: {  }
    -
        name: CallbackQuery
        description: 'This object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this query'
            -
                name: from
                types:
                    - User
                optional: false
                description: Sender
            -
                name: message
                types:
                    - Message
                optional: true
                description: 'Optional. Message with the callback button that originated the query. Note that message content and message date will not be available if the message is too old'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Optional. Identifier of the message sent via the bot in inline mode, that originated the query.'
            -
                name: chat_instance
                types:
                    - string
                optional: false
                description: 'Global identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.'
            -
                name: data
                types:
                    - string
                optional: true
                description: 'Optional. Data associated with the callback button. Be aware that a bad client can send arbitrary data in this field.'
            -
                name: game_short_name
                types:
                    - string
                optional: true
                description: 'Optional. Short name of a Game to be returned, serves as the unique identifier for the game'
        extended_by: {  }
    -
        name: ForceReply
        description: 'Upon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot''s message and tapped ''Reply''). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode.'
        fields:
            -
                name: force_reply
                types:
                    - bool
                optional: false
                description: 'Shows reply interface to the user, as if they manually selected the bot''s message and tapped ''Reply'''
            -
                name: input_field_placeholder
                types:
                    - string
                optional: true
                description: 'Optional. The placeholder to be shown in the input field when the reply is active; 1-64 characters'
            -
                name: selective
                types:
                    - bool
                optional: true
                description: 'Optional. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot''s message is a reply (has reply_to_message_id), sender of the original message.'
        extended_by: {  }
    -
        name: ChatPhoto
        description: 'This object represents a chat photo.'
        fields:
            -
                name: small_file_id
                types:
                    - string
                optional: false
                description: 'File identifier of small (160x160) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.'
            -
                name: small_file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique file identifier of small (160x160) chat photo, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: big_file_id
                types:
                    - string
                optional: false
                description: 'File identifier of big (640x640) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.'
            -
                name: big_file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique file identifier of big (640x640) chat photo, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
        extended_by: {  }
    -
        name: ChatInviteLink
        description: 'Represents an invite link for a chat.'
        fields:
            -
                name: invite_link
                types:
                    - string
                optional: false
                description: 'The invite link. If the link was created by another chat administrator, then the second part of the link will be replaced with “…”.'
            -
                name: creator
                types:
                    - User
                optional: false
                description: 'Creator of the link'
            -
                name: creates_join_request
                types:
                    - bool
                optional: false
                description: 'True, if users joining the chat via the link need to be approved by chat administrators'
            -
                name: is_primary
                types:
                    - bool
                optional: false
                description: 'True, if the link is primary'
            -
                name: is_revoked
                types:
                    - bool
                optional: false
                description: 'True, if the link is revoked'
            -
                name: name
                types:
                    - string
                optional: true
                description: 'Optional. Invite link name'
            -
                name: expire_date
                types:
                    - int
                optional: true
                description: 'Optional. Point in time (Unix timestamp) when the link will expire or has been expired'
            -
                name: member_limit
                types:
                    - int
                optional: true
                description: 'Optional. Maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999'
            -
                name: pending_join_request_count
                types:
                    - int
                optional: true
                description: 'Optional. Number of pending join requests created using this link'
        extended_by: {  }
    -
        name: ChatMember
        description: 'This object contains information about one member of a chat. Currently, the following 6 types of chat members are supported:'
        fields: {  }
        extended_by:
            - ChatMemberOwner
            - ChatMemberAdministrator
            - ChatMemberMember
            - ChatMemberRestricted
            - ChatMemberLeft
            - ChatMemberBanned
    -
        name: ChatMemberOwner
        description: 'Represents a chat member that owns the chat and has all administrator privileges.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “creator”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
            -
                name: is_anonymous
                types:
                    - bool
                optional: false
                description: 'True, if the user''s presence in the chat is hidden'
            -
                name: custom_title
                types:
                    - string
                optional: true
                description: 'Optional. Custom title for this user'
        extended_by: {  }
    -
        name: ChatMemberAdministrator
        description: 'Represents a chat member that has some additional privileges.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “administrator”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
            -
                name: can_be_edited
                types:
                    - bool
                optional: false
                description: 'True, if the bot is allowed to edit administrator privileges of that user'
            -
                name: is_anonymous
                types:
                    - bool
                optional: false
                description: 'True, if the user''s presence in the chat is hidden'
            -
                name: can_manage_chat
                types:
                    - bool
                optional: false
                description: 'True, if the administrator can access the chat event log, chat statistics, message statistics in channels, see channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other administrator privilege'
            -
                name: can_delete_messages
                types:
                    - bool
                optional: false
                description: 'True, if the administrator can delete messages of other users'
            -
                name: can_manage_voice_chats
                types:
                    - bool
                optional: false
                description: 'True, if the administrator can manage voice chats'
            -
                name: can_restrict_members
                types:
                    - bool
                optional: false
                description: 'True, if the administrator can restrict, ban or unban chat members'
            -
                name: can_promote_members
                types:
                    - bool
                optional: false
                description: 'True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by the user)'
            -
                name: can_change_info
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to change the chat title, photo and other settings'
            -
                name: can_invite_users
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to invite new users to the chat'
            -
                name: can_post_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the administrator can post in the channel; channels only'
            -
                name: can_edit_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the administrator can edit messages of other users and can pin messages; channels only'
            -
                name: can_pin_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to pin messages; groups and supergroups only'
            -
                name: custom_title
                types:
                    - string
                optional: true
                description: 'Optional. Custom title for this user'
        extended_by: {  }
    -
        name: ChatMemberMember
        description: 'Represents a chat member that has no additional privileges or restrictions.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “member”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
        extended_by: {  }
    -
        name: ChatMemberRestricted
        description: 'Represents a chat member that is under certain restrictions in the chat. Supergroups only.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “restricted”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
            -
                name: is_member
                types:
                    - bool
                optional: false
                description: 'True, if the user is a member of the chat at the moment of the request'
            -
                name: can_change_info
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to change the chat title, photo and other settings'
            -
                name: can_invite_users
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to invite new users to the chat'
            -
                name: can_pin_messages
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to pin messages'
            -
                name: can_send_messages
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to send text messages, contacts, locations and venues'
            -
                name: can_send_media_messages
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to send audios, documents, photos, videos, video notes and voice notes'
            -
                name: can_send_polls
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to send polls'
            -
                name: can_send_other_messages
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to send animations, games, stickers and use inline bots'
            -
                name: can_add_web_page_previews
                types:
                    - bool
                optional: false
                description: 'True, if the user is allowed to add web page previews to their messages'
            -
                name: until_date
                types:
                    - int
                optional: false
                description: 'Date when restrictions will be lifted for this user; unix time. If 0, then the user is restricted forever'
        extended_by: {  }
    -
        name: ChatMemberLeft
        description: 'Represents a chat member that isn''t currently a member of the chat, but may join it themselves.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “left”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
        extended_by: {  }
    -
        name: ChatMemberBanned
        description: 'Represents a chat member that was banned in the chat and can''t return to the chat or view chat messages.'
        fields:
            -
                name: status
                types:
                    - string
                optional: false
                description: 'The member''s status in the chat, always “kicked”'
            -
                name: user
                types:
                    - User
                optional: false
                description: 'Information about the user'
            -
                name: until_date
                types:
                    - int
                optional: false
                description: 'Date when restrictions will be lifted for this user; unix time. If 0, then the user is banned forever'
        extended_by: {  }
    -
        name: ChatMemberUpdated
        description: 'This object represents changes in the status of a chat member.'
        fields:
            -
                name: chat
                types:
                    - Chat
                optional: false
                description: 'Chat the user belongs to'
            -
                name: from
                types:
                    - User
                optional: false
                description: 'Performer of the action, which resulted in the change'
            -
                name: date
                types:
                    - int
                optional: false
                description: 'Date the change was done in Unix time'
            -
                name: old_chat_member
                types:
                    - ChatMember
                optional: false
                description: 'Previous information about the chat member'
            -
                name: new_chat_member
                types:
                    - ChatMember
                optional: false
                description: 'New information about the chat member'
            -
                name: invite_link
                types:
                    - ChatInviteLink
                optional: true
                description: 'Optional. Chat invite link, which was used by the user to join the chat; for joining by invite link events only.'
        extended_by: {  }
    -
        name: ChatJoinRequest
        description: 'Represents a join request sent to a chat.'
        fields:
            -
                name: chat
                types:
                    - Chat
                optional: false
                description: 'Chat to which the request was sent'
            -
                name: from
                types:
                    - User
                optional: false
                description: 'User that sent the join request'
            -
                name: date
                types:
                    - int
                optional: false
                description: 'Date the request was sent in Unix time'
            -
                name: bio
                types:
                    - string
                optional: true
                description: 'Optional. Bio of the user.'
            -
                name: invite_link
                types:
                    - ChatInviteLink
                optional: true
                description: 'Optional. Chat invite link that was used by the user to send the join request'
        extended_by: {  }
    -
        name: ChatPermissions
        description: 'Describes actions that a non-administrator user is allowed to take in a chat.'
        fields:
            -
                name: can_send_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to send text messages, contacts, locations and venues'
            -
                name: can_send_media_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to send audios, documents, photos, videos, video notes and voice notes, implies can_send_messages'
            -
                name: can_send_polls
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to send polls, implies can_send_messages'
            -
                name: can_send_other_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to send animations, games, stickers and use inline bots, implies can_send_media_messages'
            -
                name: can_add_web_page_previews
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to add web page previews to their messages, implies can_send_media_messages'
            -
                name: can_change_info
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to change the chat title, photo and other settings. Ignored in public supergroups'
            -
                name: can_invite_users
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to invite new users to the chat'
            -
                name: can_pin_messages
                types:
                    - bool
                optional: true
                description: 'Optional. True, if the user is allowed to pin messages. Ignored in public supergroups'
        extended_by: {  }
    -
        name: ChatLocation
        description: 'Represents a location to which a chat is connected.'
        fields:
            -
                name: location
                types:
                    - Location
                optional: false
                description: 'The location to which the supergroup is connected. Can''t be a live location.'
            -
                name: address
                types:
                    - string
                optional: false
                description: 'Location address; 1-64 characters, as defined by the chat owner'
        extended_by: {  }
    -
        name: BotCommand
        description: 'This object represents a bot command.'
        fields:
            -
                name: command
                types:
                    - string
                optional: false
                description: 'Text of the command, 1-32 characters. Can contain only lowercase English letters, digits and underscores.'
            -
                name: description
                types:
                    - string
                optional: false
                description: 'Description of the command, 3-256 characters.'
        extended_by: {  }
    -
        name: BotCommandScope
        description: 'This object represents the scope to which bot commands are applied. Currently, the following 7 scopes are supported:'
        fields: {  }
        extended_by:
            - BotCommandScopeDefault
            - BotCommandScopeAllPrivateChats
            - BotCommandScopeAllGroupChats
            - BotCommandScopeAllChatAdministrators
            - BotCommandScopeChat
            - BotCommandScopeChatAdministrators
            - BotCommandScopeChatMember
    -
        name: BotCommandScopeDefault
        description: 'Represents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be default'
        extended_by: {  }
    -
        name: BotCommandScopeAllPrivateChats
        description: 'Represents the scope of bot commands, covering all private chats.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be all_private_chats'
        extended_by: {  }
    -
        name: BotCommandScopeAllGroupChats
        description: 'Represents the scope of bot commands, covering all group and supergroup chats.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be all_group_chats'
        extended_by: {  }
    -
        name: BotCommandScopeAllChatAdministrators
        description: 'Represents the scope of bot commands, covering all group and supergroup chat administrators.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be all_chat_administrators'
        extended_by: {  }
    -
        name: BotCommandScopeChat
        description: 'Represents the scope of bot commands, covering a specific chat.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be chat'
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
        extended_by: {  }
    -
        name: BotCommandScopeChatAdministrators
        description: 'Represents the scope of bot commands, covering all administrators of a specific group or supergroup chat.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be chat_administrators'
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
        extended_by: {  }
    -
        name: BotCommandScopeChatMember
        description: 'Represents the scope of bot commands, covering a specific member of a group or supergroup chat.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Scope type, must be chat_member'
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
        extended_by: {  }
    -
        name: ResponseParameters
        description: 'Contains information about why a request was unsuccessful.'
        fields:
            -
                name: migrate_to_chat_id
                types:
                    - int
                optional: true
                description: 'Optional. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.'
            -
                name: retry_after
                types:
                    - int
                optional: true
                description: 'Optional. In case of exceeding flood control, the number of seconds left to wait before the request can be repeated'
        extended_by: {  }
    -
        name: InputMedia
        description: 'This object represents the content of a media message to be sent. It should be one of'
        fields: {  }
        extended_by:
            - InputMediaAnimation
            - InputMediaDocument
            - InputMediaAudio
            - InputMediaPhoto
            - InputMediaVideo
    -
        name: InputMediaPhoto
        description: 'Represents a photo to be sent.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be photo'
            -
                name: media
                types:
                    - string
                optional: false
                description: 'File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://<file_attach_name>” to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the photo caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
        extended_by: {  }
    -
        name: InputMediaVideo
        description: 'Represents a video to be sent.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be video'
            -
                name: media
                types:
                    - string
                optional: false
                description: 'File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://<file_attach_name>” to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the video to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the video caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: width
                types:
                    - int
                optional: true
                description: 'Optional. Video width'
            -
                name: height
                types:
                    - int
                optional: true
                description: 'Optional. Video height'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Optional. Video duration in seconds'
            -
                name: supports_streaming
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if the uploaded video is suitable for streaming'
        extended_by: {  }
    -
        name: InputMediaAnimation
        description: 'Represents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be animation'
            -
                name: media
                types:
                    - string
                optional: false
                description: 'File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://<file_attach_name>” to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the animation to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the animation caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: width
                types:
                    - int
                optional: true
                description: 'Optional. Animation width'
            -
                name: height
                types:
                    - int
                optional: true
                description: 'Optional. Animation height'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Optional. Animation duration in seconds'
        extended_by: {  }
    -
        name: InputMediaAudio
        description: 'Represents an audio file to be treated as music to be sent.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be audio'
            -
                name: media
                types:
                    - string
                optional: false
                description: 'File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://<file_attach_name>” to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the audio to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the audio caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Optional. Duration of the audio in seconds'
            -
                name: performer
                types:
                    - string
                optional: true
                description: 'Optional. Performer of the audio'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title of the audio'
        extended_by: {  }
    -
        name: InputMediaDocument
        description: 'Represents a general file to be sent.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be document'
            -
                name: media
                types:
                    - string
                optional: false
                description: 'File to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass “attach://<file_attach_name>” to upload a new one using multipart/form-data under <file_attach_name> name. More info on Sending Files »'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Optional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the document to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the document caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: disable_content_type_detection
                types:
                    - bool
                optional: true
                description: 'Optional. Disables automatic server-side content type detection for files uploaded using multipart/form-data. Always True, if the document is sent as part of an album.'
        extended_by: {  }
    -
        name: InputFile
        description: 'This object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.'
        fields: {  }
        extended_by: {  }
    -
        name: Sticker
        description: 'This object represents a sticker.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: width
                types:
                    - int
                optional: false
                description: 'Sticker width'
            -
                name: height
                types:
                    - int
                optional: false
                description: 'Sticker height'
            -
                name: is_animated
                types:
                    - bool
                optional: false
                description: 'True, if the sticker is animated'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Sticker thumbnail in the .WEBP or .JPG format'
            -
                name: emoji
                types:
                    - string
                optional: true
                description: 'Optional. Emoji associated with the sticker'
            -
                name: set_name
                types:
                    - string
                optional: true
                description: 'Optional. Name of the sticker set to which the sticker belongs'
            -
                name: mask_position
                types:
                    - MaskPosition
                optional: true
                description: 'Optional. For mask stickers, the position where the mask should be placed'
            -
                name: file_size
                types:
                    - int
                optional: true
                description: 'Optional. File size in bytes'
        extended_by: {  }
    -
        name: StickerSet
        description: 'This object represents a sticker set.'
        fields:
            -
                name: name
                types:
                    - string
                optional: false
                description: 'Sticker set name'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Sticker set title'
            -
                name: is_animated
                types:
                    - bool
                optional: false
                description: 'True, if the sticker set contains animated stickers'
            -
                name: contains_masks
                types:
                    - bool
                optional: false
                description: 'True, if the sticker set contains masks'
            -
                name: stickers
                types:
                    - Array<Sticker>
                optional: false
                description: 'List of all set stickers'
            -
                name: thumb
                types:
                    - PhotoSize
                optional: true
                description: 'Optional. Sticker set thumbnail in the .WEBP or .TGS format'
        extended_by: {  }
    -
        name: MaskPosition
        description: 'This object describes the position on faces where a mask should be placed by default.'
        fields:
            -
                name: point
                types:
                    - string
                optional: false
                description: 'The part of the face relative to which the mask should be placed. One of “forehead”, “eyes”, “mouth”, or “chin”.'
            -
                name: x_shift
                types:
                    - float
                optional: false
                description: 'Shift by X-axis measured in widths of the mask scaled to the face size, from left to right. For example, choosing -1.0 will place mask just to the left of the default mask position.'
            -
                name: y_shift
                types:
                    - float
                optional: false
                description: 'Shift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. For example, 1.0 will place the mask just below the default mask position.'
            -
                name: scale
                types:
                    - float
                optional: false
                description: 'Mask scaling coefficient. For example, 2.0 means double size.'
        extended_by: {  }
    -
        name: InlineQuery
        description: 'This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this query'
            -
                name: from
                types:
                    - User
                optional: false
                description: Sender
            -
                name: query
                types:
                    - string
                optional: false
                description: 'Text of the query (up to 256 characters)'
            -
                name: offset
                types:
                    - string
                optional: false
                description: 'Offset of the results to be returned, can be controlled by the bot'
            -
                name: chat_type
                types:
                    - string
                optional: true
                description: 'Optional. Type of the chat, from which the inline query was sent. Can be either “sender” for a private chat with the inline query sender, “private”, “group”, “supergroup”, or “channel”. The chat type should be always known for requests sent from official clients and most third-party clients, unless the request was sent from a secret chat'
            -
                name: location
                types:
                    - Location
                optional: true
                description: 'Optional. Sender location, only for bots that request user location'
        extended_by: {  }
    -
        name: InlineQueryResult
        description: 'This object represents one result of an inline query. Telegram clients currently support results of the following 20 types:'
        fields: {  }
        extended_by:
            - InlineQueryResultCachedAudio
            - InlineQueryResultCachedDocument
            - InlineQueryResultCachedGif
            - InlineQueryResultCachedMpeg4Gif
            - InlineQueryResultCachedPhoto
            - InlineQueryResultCachedSticker
            - InlineQueryResultCachedVideo
            - InlineQueryResultCachedVoice
            - InlineQueryResultArticle
            - InlineQueryResultAudio
            - InlineQueryResultContact
            - InlineQueryResultGame
            - InlineQueryResultDocument
            - InlineQueryResultGif
            - InlineQueryResultLocation
            - InlineQueryResultMpeg4Gif
            - InlineQueryResultPhoto
            - InlineQueryResultVenue
            - InlineQueryResultVideo
            - InlineQueryResultVoice
    -
        name: InlineQueryResultArticle
        description: 'Represents a link to an article or web page.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be article'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 Bytes'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title of the result'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: false
                description: 'Content of the message to be sent'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: url
                types:
                    - string
                optional: true
                description: 'Optional. URL of the result'
            -
                name: hide_url
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if you don''t want the URL to be shown in the message'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: thumb_url
                types:
                    - string
                optional: true
                description: 'Optional. Url of the thumbnail for the result'
            -
                name: thumb_width
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail width'
            -
                name: thumb_height
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail height'
        extended_by: {  }
    -
        name: InlineQueryResultPhoto
        description: 'Represents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be photo'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: photo_url
                types:
                    - string
                optional: false
                description: 'A valid URL of the photo. Photo must be in JPEG format. Photo size must not exceed 5MB'
            -
                name: thumb_url
                types:
                    - string
                optional: false
                description: 'URL of the thumbnail for the photo'
            -
                name: photo_width
                types:
                    - int
                optional: true
                description: 'Optional. Width of the photo'
            -
                name: photo_height
                types:
                    - int
                optional: true
                description: 'Optional. Height of the photo'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the photo caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the photo'
        extended_by: {  }
    -
        name: InlineQueryResultGif
        description: 'Represents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be gif'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: gif_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the GIF file. File size must not exceed 1MB'
            -
                name: gif_width
                types:
                    - int
                optional: true
                description: 'Optional. Width of the GIF'
            -
                name: gif_height
                types:
                    - int
                optional: true
                description: 'Optional. Height of the GIF'
            -
                name: gif_duration
                types:
                    - int
                optional: true
                description: 'Optional. Duration of the GIF in seconds'
            -
                name: thumb_url
                types:
                    - string
                optional: false
                description: 'URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result'
            -
                name: thumb_mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the thumbnail, must be one of “image/jpeg”, “image/gif”, or “video/mp4”. Defaults to “image/jpeg”'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the GIF animation'
        extended_by: {  }
    -
        name: InlineQueryResultMpeg4Gif
        description: 'Represents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be mpeg4_gif'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: mpeg4_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the MP4 file. File size must not exceed 1MB'
            -
                name: mpeg4_width
                types:
                    - int
                optional: true
                description: 'Optional. Video width'
            -
                name: mpeg4_height
                types:
                    - int
                optional: true
                description: 'Optional. Video height'
            -
                name: mpeg4_duration
                types:
                    - int
                optional: true
                description: 'Optional. Video duration in seconds'
            -
                name: thumb_url
                types:
                    - string
                optional: false
                description: 'URL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result'
            -
                name: thumb_mime_type
                types:
                    - string
                optional: true
                description: 'Optional. MIME type of the thumbnail, must be one of “image/jpeg”, “image/gif”, or “video/mp4”. Defaults to “image/jpeg”'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the video animation'
        extended_by: {  }
    -
        name: InlineQueryResultVideo
        description: 'Represents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be video'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: video_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the embedded video player or video file'
            -
                name: mime_type
                types:
                    - string
                optional: false
                description: 'Mime type of the content of video url, “text/html” or “video/mp4”'
            -
                name: thumb_url
                types:
                    - string
                optional: false
                description: 'URL of the thumbnail (JPEG only) for the video'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the video to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the video caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: video_width
                types:
                    - int
                optional: true
                description: 'Optional. Video width'
            -
                name: video_height
                types:
                    - int
                optional: true
                description: 'Optional. Video height'
            -
                name: video_duration
                types:
                    - int
                optional: true
                description: 'Optional. Video duration in seconds'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the video. This field is required if InlineQueryResultVideo is used to send an HTML-page as a result (e.g., a YouTube video).'
        extended_by: {  }
    -
        name: InlineQueryResultAudio
        description: 'Represents a link to an MP3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be audio'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: audio_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the audio file'
            -
                name: title
                types:
                    - string
                optional: false
                description: Title
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the audio caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: performer
                types:
                    - string
                optional: true
                description: 'Optional. Performer'
            -
                name: audio_duration
                types:
                    - int
                optional: true
                description: 'Optional. Audio duration in seconds'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the audio'
        extended_by: {  }
    -
        name: InlineQueryResultVoice
        description: 'Represents a link to a voice recording in an .OGG container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be voice'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: voice_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the voice recording'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Recording title'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the voice message caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: voice_duration
                types:
                    - int
                optional: true
                description: 'Optional. Recording duration in seconds'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the voice recording'
        extended_by: {  }
    -
        name: InlineQueryResultDocument
        description: 'Represents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be document'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the document to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the document caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: document_url
                types:
                    - string
                optional: false
                description: 'A valid URL for the file'
            -
                name: mime_type
                types:
                    - string
                optional: false
                description: 'Mime type of the content of the file, either “application/pdf” or “application/zip”'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the file'
            -
                name: thumb_url
                types:
                    - string
                optional: true
                description: 'Optional. URL of the thumbnail (JPEG only) for the file'
            -
                name: thumb_width
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail width'
            -
                name: thumb_height
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail height'
        extended_by: {  }
    -
        name: InlineQueryResultLocation
        description: 'Represents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be location'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 Bytes'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Location latitude in degrees'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Location longitude in degrees'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Location title'
            -
                name: horizontal_accuracy
                types:
                    - float
                optional: true
                description: 'Optional. The radius of uncertainty for the location, measured in meters; 0-1500'
            -
                name: live_period
                types:
                    - int
                optional: true
                description: 'Optional. Period in seconds for which the location can be updated, should be between 60 and 86400.'
            -
                name: heading
                types:
                    - int
                optional: true
                description: 'Optional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.'
            -
                name: proximity_alert_radius
                types:
                    - int
                optional: true
                description: 'Optional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the location'
            -
                name: thumb_url
                types:
                    - string
                optional: true
                description: 'Optional. Url of the thumbnail for the result'
            -
                name: thumb_width
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail width'
            -
                name: thumb_height
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail height'
        extended_by: {  }
    -
        name: InlineQueryResultVenue
        description: 'Represents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be venue'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 Bytes'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of the venue location in degrees'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of the venue location in degrees'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title of the venue'
            -
                name: address
                types:
                    - string
                optional: false
                description: 'Address of the venue'
            -
                name: foursquare_id
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare identifier of the venue if known'
            -
                name: foursquare_type
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)'
            -
                name: google_place_id
                types:
                    - string
                optional: true
                description: 'Optional. Google Places identifier of the venue'
            -
                name: google_place_type
                types:
                    - string
                optional: true
                description: 'Optional. Google Places type of the venue. (See supported types.)'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the venue'
            -
                name: thumb_url
                types:
                    - string
                optional: true
                description: 'Optional. Url of the thumbnail for the result'
            -
                name: thumb_width
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail width'
            -
                name: thumb_height
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail height'
        extended_by: {  }
    -
        name: InlineQueryResultContact
        description: 'Represents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be contact'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 Bytes'
            -
                name: phone_number
                types:
                    - string
                optional: false
                description: 'Contact''s phone number'
            -
                name: first_name
                types:
                    - string
                optional: false
                description: 'Contact''s first name'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Optional. Contact''s last name'
            -
                name: vcard
                types:
                    - string
                optional: true
                description: 'Optional. Additional data about the contact in the form of a vCard, 0-2048 bytes'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the contact'
            -
                name: thumb_url
                types:
                    - string
                optional: true
                description: 'Optional. Url of the thumbnail for the result'
            -
                name: thumb_width
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail width'
            -
                name: thumb_height
                types:
                    - int
                optional: true
                description: 'Optional. Thumbnail height'
        extended_by: {  }
    -
        name: InlineQueryResultGame
        description: 'Represents a Game.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be game'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: game_short_name
                types:
                    - string
                optional: false
                description: 'Short name of the game'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
        extended_by: {  }
    -
        name: InlineQueryResultCachedPhoto
        description: 'Represents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be photo'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: photo_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier of the photo'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the photo to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the photo caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the photo'
        extended_by: {  }
    -
        name: InlineQueryResultCachedGif
        description: 'Represents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be gif'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: gif_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the GIF file'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the GIF animation'
        extended_by: {  }
    -
        name: InlineQueryResultCachedMpeg4Gif
        description: 'Represents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be mpeg4_gif'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: mpeg4_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the MP4 file'
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Optional. Title for the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the video animation'
        extended_by: {  }
    -
        name: InlineQueryResultCachedSticker
        description: 'Represents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be sticker'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: sticker_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier of the sticker'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the sticker'
        extended_by: {  }
    -
        name: InlineQueryResultCachedDocument
        description: 'Represents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be document'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title for the result'
            -
                name: document_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the file'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the document to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the document caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the file'
        extended_by: {  }
    -
        name: InlineQueryResultCachedVideo
        description: 'Represents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be video'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: video_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the video file'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title for the result'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'Optional. Short description of the result'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption of the video to be sent, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the video caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the video'
        extended_by: {  }
    -
        name: InlineQueryResultCachedVoice
        description: 'Represents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be voice'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: voice_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the voice message'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Voice message title'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the voice message caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the voice message'
        extended_by: {  }
    -
        name: InlineQueryResultCachedAudio
        description: 'Represents a link to an MP3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of the result, must be audio'
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this result, 1-64 bytes'
            -
                name: audio_file_id
                types:
                    - string
                optional: false
                description: 'A valid file identifier for the audio file'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Optional. Caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the audio caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'Optional. Inline keyboard attached to the message'
            -
                name: input_message_content
                types:
                    - InputMessageContent
                optional: true
                description: 'Optional. Content of the message to be sent instead of the audio'
        extended_by: {  }
    -
        name: InputMessageContent
        description: 'This object represents the content of a message to be sent as a result of an inline query. Telegram clients currently support the following 5 types:'
        fields: {  }
        extended_by:
            - InputTextMessageContent
            - InputLocationMessageContent
            - InputVenueMessageContent
            - InputContactMessageContent
            - InputInvoiceMessageContent
    -
        name: InputTextMessageContent
        description: 'Represents the content of a text message to be sent as the result of an inline query.'
        fields:
            -
                name: message_text
                types:
                    - string
                optional: false
                description: 'Text of the message to be sent, 1-4096 characters'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Optional. Mode for parsing entities in the message text. See formatting options for more details.'
            -
                name: entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. List of special entities that appear in message text, which can be specified instead of parse_mode'
            -
                name: disable_web_page_preview
                types:
                    - bool
                optional: true
                description: 'Optional. Disables link previews for links in the sent message'
        extended_by: {  }
    -
        name: InputLocationMessageContent
        description: 'Represents the content of a location message to be sent as the result of an inline query.'
        fields:
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of the location in degrees'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of the location in degrees'
            -
                name: horizontal_accuracy
                types:
                    - float
                optional: true
                description: 'Optional. The radius of uncertainty for the location, measured in meters; 0-1500'
            -
                name: live_period
                types:
                    - int
                optional: true
                description: 'Optional. Period in seconds for which the location can be updated, should be between 60 and 86400.'
            -
                name: heading
                types:
                    - int
                optional: true
                description: 'Optional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.'
            -
                name: proximity_alert_radius
                types:
                    - int
                optional: true
                description: 'Optional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.'
        extended_by: {  }
    -
        name: InputVenueMessageContent
        description: 'Represents the content of a venue message to be sent as the result of an inline query.'
        fields:
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of the venue in degrees'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of the venue in degrees'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Name of the venue'
            -
                name: address
                types:
                    - string
                optional: false
                description: 'Address of the venue'
            -
                name: foursquare_id
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare identifier of the venue, if known'
            -
                name: foursquare_type
                types:
                    - string
                optional: true
                description: 'Optional. Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)'
            -
                name: google_place_id
                types:
                    - string
                optional: true
                description: 'Optional. Google Places identifier of the venue'
            -
                name: google_place_type
                types:
                    - string
                optional: true
                description: 'Optional. Google Places type of the venue. (See supported types.)'
        extended_by: {  }
    -
        name: InputContactMessageContent
        description: 'Represents the content of a contact message to be sent as the result of an inline query.'
        fields:
            -
                name: phone_number
                types:
                    - string
                optional: false
                description: 'Contact''s phone number'
            -
                name: first_name
                types:
                    - string
                optional: false
                description: 'Contact''s first name'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Optional. Contact''s last name'
            -
                name: vcard
                types:
                    - string
                optional: true
                description: 'Optional. Additional data about the contact in the form of a vCard, 0-2048 bytes'
        extended_by: {  }
    -
        name: InputInvoiceMessageContent
        description: 'Represents the content of an invoice message to be sent as the result of an inline query.'
        fields:
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Product name, 1-32 characters'
            -
                name: description
                types:
                    - string
                optional: false
                description: 'Product description, 1-255 characters'
            -
                name: payload
                types:
                    - string
                optional: false
                description: 'Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.'
            -
                name: provider_token
                types:
                    - string
                optional: false
                description: 'Payment provider token, obtained via Botfather'
            -
                name: currency
                types:
                    - string
                optional: false
                description: 'Three-letter ISO 4217 currency code, see more on currencies'
            -
                name: prices
                types:
                    - Array<LabeledPrice>
                optional: false
                description: 'Price breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)'
            -
                name: max_tip_amount
                types:
                    - int
                optional: true
                description: 'Optional. The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0'
            -
                name: suggested_tip_amounts
                types:
                    - Array<int>
                optional: true
                description: 'Optional. A JSON-serialized array of suggested amounts of tip in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.'
            -
                name: provider_data
                types:
                    - string
                optional: true
                description: 'Optional. A JSON-serialized object for data about the invoice, which will be shared with the payment provider. A detailed description of the required fields should be provided by the payment provider.'
            -
                name: photo_url
                types:
                    - string
                optional: true
                description: 'Optional. URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.'
            -
                name: photo_size
                types:
                    - int
                optional: true
                description: 'Optional. Photo size'
            -
                name: photo_width
                types:
                    - int
                optional: true
                description: 'Optional. Photo width'
            -
                name: photo_height
                types:
                    - int
                optional: true
                description: 'Optional. Photo height'
            -
                name: need_name
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if you require the user''s full name to complete the order'
            -
                name: need_phone_number
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if you require the user''s phone number to complete the order'
            -
                name: need_email
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if you require the user''s email address to complete the order'
            -
                name: need_shipping_address
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if you require the user''s shipping address to complete the order'
            -
                name: send_phone_number_to_provider
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if user''s phone number should be sent to provider'
            -
                name: send_email_to_provider
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if user''s email address should be sent to provider'
            -
                name: is_flexible
                types:
                    - bool
                optional: true
                description: 'Optional. Pass True, if the final price depends on the shipping method'
        extended_by: {  }
    -
        name: ChosenInlineResult
        description: 'Represents a result of an inline query that was chosen by the user and sent to their chat partner.'
        fields:
            -
                name: result_id
                types:
                    - string
                optional: false
                description: 'The unique identifier for the result that was chosen'
            -
                name: from
                types:
                    - User
                optional: false
                description: 'The user that chose the result'
            -
                name: location
                types:
                    - Location
                optional: true
                description: 'Optional. Sender location, only for bots that require user location'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Optional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message.'
            -
                name: query
                types:
                    - string
                optional: false
                description: 'The query that was used to obtain the result'
        extended_by: {  }
    -
        name: LabeledPrice
        description: 'This object represents a portion of the price for goods or services.'
        fields:
            -
                name: label
                types:
                    - string
                optional: false
                description: 'Portion label'
            -
                name: amount
                types:
                    - int
                optional: false
                description: 'Price of the product in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).'
        extended_by: {  }
    -
        name: Invoice
        description: 'This object contains basic information about an invoice.'
        fields:
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Product name'
            -
                name: description
                types:
                    - string
                optional: false
                description: 'Product description'
            -
                name: start_parameter
                types:
                    - string
                optional: false
                description: 'Unique bot deep-linking parameter that can be used to generate this invoice'
            -
                name: currency
                types:
                    - string
                optional: false
                description: 'Three-letter ISO 4217 currency code'
            -
                name: total_amount
                types:
                    - int
                optional: false
                description: 'Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).'
        extended_by: {  }
    -
        name: ShippingAddress
        description: 'This object represents a shipping address.'
        fields:
            -
                name: country_code
                types:
                    - string
                optional: false
                description: 'ISO 3166-1 alpha-2 country code'
            -
                name: state
                types:
                    - string
                optional: false
                description: 'State, if applicable'
            -
                name: city
                types:
                    - string
                optional: false
                description: City
            -
                name: street_line1
                types:
                    - string
                optional: false
                description: 'First line for the address'
            -
                name: street_line2
                types:
                    - string
                optional: false
                description: 'Second line for the address'
            -
                name: post_code
                types:
                    - string
                optional: false
                description: 'Address post code'
        extended_by: {  }
    -
        name: OrderInfo
        description: 'This object represents information about an order.'
        fields:
            -
                name: name
                types:
                    - string
                optional: true
                description: 'Optional. User name'
            -
                name: phone_number
                types:
                    - string
                optional: true
                description: 'Optional. User''s phone number'
            -
                name: email
                types:
                    - string
                optional: true
                description: 'Optional. User email'
            -
                name: shipping_address
                types:
                    - ShippingAddress
                optional: true
                description: 'Optional. User shipping address'
        extended_by: {  }
    -
        name: ShippingOption
        description: 'This object represents one shipping option.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Shipping option identifier'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Option title'
            -
                name: prices
                types:
                    - Array<LabeledPrice>
                optional: false
                description: 'List of price portions'
        extended_by: {  }
    -
        name: SuccessfulPayment
        description: 'This object contains basic information about a successful payment.'
        fields:
            -
                name: currency
                types:
                    - string
                optional: false
                description: 'Three-letter ISO 4217 currency code'
            -
                name: total_amount
                types:
                    - int
                optional: false
                description: 'Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).'
            -
                name: invoice_payload
                types:
                    - string
                optional: false
                description: 'Bot specified invoice payload'
            -
                name: shipping_option_id
                types:
                    - string
                optional: true
                description: 'Optional. Identifier of the shipping option chosen by the user'
            -
                name: order_info
                types:
                    - OrderInfo
                optional: true
                description: 'Optional. Order info provided by the user'
            -
                name: telegram_payment_charge_id
                types:
                    - string
                optional: false
                description: 'Telegram payment identifier'
            -
                name: provider_payment_charge_id
                types:
                    - string
                optional: false
                description: 'Provider payment identifier'
        extended_by: {  }
    -
        name: ShippingQuery
        description: 'This object contains information about an incoming shipping query.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique query identifier'
            -
                name: from
                types:
                    - User
                optional: false
                description: 'User who sent the query'
            -
                name: invoice_payload
                types:
                    - string
                optional: false
                description: 'Bot specified invoice payload'
            -
                name: shipping_address
                types:
                    - ShippingAddress
                optional: false
                description: 'User specified shipping address'
        extended_by: {  }
    -
        name: PreCheckoutQuery
        description: 'This object contains information about an incoming pre-checkout query.'
        fields:
            -
                name: id
                types:
                    - string
                optional: false
                description: 'Unique query identifier'
            -
                name: from
                types:
                    - User
                optional: false
                description: 'User who sent the query'
            -
                name: currency
                types:
                    - string
                optional: false
                description: 'Three-letter ISO 4217 currency code'
            -
                name: total_amount
                types:
                    - int
                optional: false
                description: 'Total price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).'
            -
                name: invoice_payload
                types:
                    - string
                optional: false
                description: 'Bot specified invoice payload'
            -
                name: shipping_option_id
                types:
                    - string
                optional: true
                description: 'Optional. Identifier of the shipping option chosen by the user'
            -
                name: order_info
                types:
                    - OrderInfo
                optional: true
                description: 'Optional. Order info provided by the user'
        extended_by: {  }
    -
        name: PassportData
        description: 'Contains information about Telegram Passport data shared with the bot by the user.'
        fields:
            -
                name: data
                types:
                    - Array<EncryptedPassportElement>
                optional: false
                description: 'Array with information about documents and other Telegram Passport elements that was shared with the bot'
            -
                name: credentials
                types:
                    - EncryptedCredentials
                optional: false
                description: 'Encrypted credentials required to decrypt the data'
        extended_by: {  }
    -
        name: PassportFile
        description: 'This object represents a file uploaded to Telegram Passport. Currently all Telegram Passport files are in JPEG format when decrypted and don''t exceed 10MB.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'Identifier for this file, which can be used to download or reuse the file'
            -
                name: file_unique_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for this file, which is supposed to be the same over time and for different bots. Can''t be used to download or reuse the file.'
            -
                name: file_size
                types:
                    - int
                optional: false
                description: 'File size in bytes'
            -
                name: file_date
                types:
                    - int
                optional: false
                description: 'Unix time when the file was uploaded'
        extended_by: {  }
    -
        name: EncryptedPassportElement
        description: 'Contains information about documents or other Telegram Passport elements shared with the bot by the user.'
        fields:
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Element type. One of “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport”, “address”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”, “phone_number”, “email”.'
            -
                name: data
                types:
                    - string
                optional: true
                description: 'Optional. Base64-encoded encrypted Telegram Passport element data provided by the user, available for “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport” and “address” types. Can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: phone_number
                types:
                    - string
                optional: true
                description: 'Optional. User''s verified phone number, available only for “phone_number” type'
            -
                name: email
                types:
                    - string
                optional: true
                description: 'Optional. User''s verified email address, available only for “email” type'
            -
                name: files
                types:
                    - Array<PassportFile>
                optional: true
                description: 'Optional. Array of encrypted files with documents provided by the user, available for “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration” and “temporary_registration” types. Files can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: front_side
                types:
                    - PassportFile
                optional: true
                description: 'Optional. Encrypted file with the front side of the document, provided by the user. Available for “passport”, “driver_license”, “identity_card” and “internal_passport”. The file can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: reverse_side
                types:
                    - PassportFile
                optional: true
                description: 'Optional. Encrypted file with the reverse side of the document, provided by the user. Available for “driver_license” and “identity_card”. The file can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: selfie
                types:
                    - PassportFile
                optional: true
                description: 'Optional. Encrypted file with the selfie of the user holding a document, provided by the user; available for “passport”, “driver_license”, “identity_card” and “internal_passport”. The file can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: translation
                types:
                    - Array<PassportFile>
                optional: true
                description: 'Optional. Array of encrypted files with translated versions of documents provided by the user. Available if requested for “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration” and “temporary_registration” types. Files can be decrypted and verified using the accompanying EncryptedCredentials.'
            -
                name: hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded element hash for using in PassportElementErrorUnspecified'
        extended_by: {  }
    -
        name: EncryptedCredentials
        description: 'Contains data required for decrypting and authenticating EncryptedPassportElement. See the Telegram Passport Documentation for a complete description of the data decryption and authentication processes.'
        fields:
            -
                name: data
                types:
                    - string
                optional: false
                description: 'Base64-encoded encrypted JSON-serialized data with unique user''s payload, data hashes and secrets required for EncryptedPassportElement decryption and authentication'
            -
                name: hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded data hash for data authentication'
            -
                name: secret
                types:
                    - string
                optional: false
                description: 'Base64-encoded secret, encrypted with the bot''s public RSA key, required for data decryption'
        extended_by: {  }
    -
        name: PassportElementError
        description: 'This object represents an error in the Telegram Passport element which was submitted that should be resolved by the user. It should be one of:'
        fields: {  }
        extended_by:
            - PassportElementErrorDataField
            - PassportElementErrorFrontSide
            - PassportElementErrorReverseSide
            - PassportElementErrorSelfie
            - PassportElementErrorFile
            - PassportElementErrorFiles
            - PassportElementErrorTranslationFile
            - PassportElementErrorTranslationFiles
            - PassportElementErrorUnspecified
    -
        name: PassportElementErrorDataField
        description: 'Represents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field''s value changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be data'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the error, one of “personal_details”, “passport”, “driver_license”, “identity_card”, “internal_passport”, “address”'
            -
                name: field_name
                types:
                    - string
                optional: false
                description: 'Name of the data field which has the error'
            -
                name: data_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded data hash'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorFrontSide
        description: 'Represents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be front_side'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”'
            -
                name: file_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded hash of the file with the front side of the document'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorReverseSide
        description: 'Represents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be reverse_side'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the issue, one of “driver_license”, “identity_card”'
            -
                name: file_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded hash of the file with the reverse side of the document'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorSelfie
        description: 'Represents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be selfie'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”'
            -
                name: file_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded hash of the file with the selfie'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorFile
        description: 'Represents an issue with a document scan. The error is considered resolved when the file with the document scan changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be file'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the issue, one of “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”'
            -
                name: file_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded file hash'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorFiles
        description: 'Represents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be files'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'The section of the user''s Telegram Passport which has the issue, one of “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”'
            -
                name: file_hashes
                types:
                    - Array<string>
                optional: false
                description: 'List of base64-encoded file hashes'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorTranslationFile
        description: 'Represents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be translation_file'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of element of the user''s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”'
            -
                name: file_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded file hash'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorTranslationFiles
        description: 'Represents an issue with the translated version of a document. The error is considered resolved when a file with the document translation change.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be translation_files'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of element of the user''s Telegram Passport which has the issue, one of “passport”, “driver_license”, “identity_card”, “internal_passport”, “utility_bill”, “bank_statement”, “rental_agreement”, “passport_registration”, “temporary_registration”'
            -
                name: file_hashes
                types:
                    - Array<string>
                optional: false
                description: 'List of base64-encoded file hashes'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: PassportElementErrorUnspecified
        description: 'Represents an issue in an unspecified place. The error is considered resolved when new data is added.'
        fields:
            -
                name: source
                types:
                    - string
                optional: false
                description: 'Error source, must be unspecified'
            -
                name: type
                types:
                    - string
                optional: false
                description: 'Type of element of the user''s Telegram Passport which has the issue'
            -
                name: element_hash
                types:
                    - string
                optional: false
                description: 'Base64-encoded element hash'
            -
                name: message
                types:
                    - string
                optional: false
                description: 'Error message'
        extended_by: {  }
    -
        name: Game
        description: 'This object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.'
        fields:
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Title of the game'
            -
                name: description
                types:
                    - string
                optional: false
                description: 'Description of the game'
            -
                name: photo
                types:
                    - Array<PhotoSize>
                optional: false
                description: 'Photo that will be displayed in the game message in chats.'
            -
                name: text
                types:
                    - string
                optional: true
                description: 'Optional. Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters.'
            -
                name: text_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'Optional. Special entities that appear in text, such as usernames, URLs, bot commands, etc.'
            -
                name: animation
                types:
                    - Animation
                optional: true
                description: 'Optional. Animation that will be displayed in the game message in chats. Upload via BotFather'
        extended_by: {  }
    -
        name: CallbackGame
        description: 'A placeholder, currently holds no information. Use BotFather to set up your game.'
        fields: {  }
        extended_by: {  }
    -
        name: GameHighScore
        description: 'This object represents one row of the high scores table for a game.'
        fields:
            -
                name: position
                types:
                    - int
                optional: false
                description: 'Position in high score table for the game'
            -
                name: user
                types:
                    - User
                optional: false
                description: User
            -
                name: score
                types:
                    - int
                optional: false
                description: Score
        extended_by: {  }
methods:
    -
        name: getUpdates
        description: 'Use this method to receive incoming updates using long polling (wiki). An Array of Update objects is returned.'
        fields:
            -
                name: offset
                types:
                    - int
                optional: true
                description: 'Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id. The negative offset can be specified to retrieve updates starting from -offset update from the end of the updates queue. All previous updates will forgotten.'
            -
                name: limit
                types:
                    - int
                optional: true
                description: 'Limits the number of updates to be retrieved. Values between 1-100 are accepted. Defaults to 100.'
            -
                name: timeout
                types:
                    - int
                optional: true
                description: 'Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only.'
            -
                name: allowed_updates
                types:
                    - Array<string>
                optional: true
                description: 'A JSON-serialized list of the update types you want your bot to receive. For example, specify [“message”, “edited_channel_post”, “callback_query”] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member (default). If not specified, the previous setting will be used.Please note that this parameter doesn''t affect updates created before the call to the getUpdates, so unwanted updates may be received for a short period of time.'
        return_types:
            - Array<Update>
    -
        name: setWebhook
        description: "Use this method to specify a url and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified url, containing a JSON-serialized Update. In case of an unsuccessful request, we will give up after a reasonable amount of attempts. Returns True on success.\nIf you'd like to make sure that the Webhook request comes from Telegram, we recommend using a secret path in the URL, e.g. https://www.example.com/<token>. Since nobody else knows your bot's token, you can be pretty sure it's us."
        fields:
            -
                name: url
                types:
                    - string
                optional: false
                description: 'HTTPS url to send updates to. Use an empty string to remove webhook integration'
            -
                name: certificate
                types:
                    - InputFile
                optional: true
                description: 'Upload your public key certificate so that the root certificate in use can be checked. See our self-signed guide for details.'
            -
                name: ip_address
                types:
                    - string
                optional: true
                description: 'The fixed IP address which will be used to send webhook requests instead of the IP address resolved through DNS'
            -
                name: max_connections
                types:
                    - int
                optional: true
                description: 'Maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery, 1-100. Defaults to 40. Use lower values to limit the load on your bot''s server, and higher values to increase your bot''s throughput.'
            -
                name: allowed_updates
                types:
                    - Array<string>
                optional: true
                description: 'A JSON-serialized list of the update types you want your bot to receive. For example, specify [“message”, “edited_channel_post”, “callback_query”] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member (default). If not specified, the previous setting will be used.Please note that this parameter doesn''t affect updates created before the call to the setWebhook, so unwanted updates may be received for a short period of time.'
            -
                name: drop_pending_updates
                types:
                    - bool
                optional: true
                description: 'Pass True to drop all pending updates'
        return_types:
            - bool
    -
        name: deleteWebhook
        description: 'Use this method to remove webhook integration if you decide to switch back to getUpdates. Returns True on success.'
        fields:
            -
                name: drop_pending_updates
                types:
                    - bool
                optional: true
                description: 'Pass True to drop all pending updates'
        return_types:
            - bool
    -
        name: getWebhookInfo
        description: 'Use this method to get current webhook status. Requires no parameters. On success, returns a WebhookInfo object. If the bot is using getUpdates, will return an object with the url field empty.'
        fields: {  }
        return_types:
            - WebhookInfo
    -
        name: getMe
        description: 'A simple method for testing your bot''s authentication token. Requires no parameters. Returns basic information about the bot in form of a User object.'
        fields: {  }
        return_types:
            - User
    -
        name: logOut
        description: 'Use this method to log out from the cloud Bot API server before launching the bot locally. You must log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns True on success. Requires no parameters.'
        fields: {  }
        return_types:
            - bool
    -
        name: close
        description: 'Use this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn''t launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns True on success. Requires no parameters.'
        fields: {  }
        return_types:
            - bool
    -
        name: sendMessage
        description: 'Use this method to send text messages. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: text
                types:
                    - string
                optional: false
                description: 'Text of the message to be sent, 1-4096 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the message text. See formatting options for more details.'
            -
                name: entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in message text, which can be specified instead of parse_mode'
            -
                name: disable_web_page_preview
                types:
                    - bool
                optional: true
                description: 'Disables link previews for links in this message'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: forwardMessage
        description: 'Use this method to forward messages of any kind. Service messages can''t be forwarded. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: from_chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Message identifier in the chat specified in from_chat_id'
        return_types:
            - Message
    -
        name: copyMessage
        description: 'Use this method to copy messages of any kind. Service messages and invoice messages can''t be copied. The method is analogous to the method forwardMessage, but the copied message doesn''t have a link to the original message. Returns the MessageId of the sent message on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: from_chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the chat where the original message was sent (or channel username in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Message identifier in the chat specified in from_chat_id'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'New caption for media, 0-1024 characters after entities parsing. If not specified, the original caption is kept'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the new caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the new caption, which can be specified instead of parse_mode'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - MessageId
    -
        name: sendPhoto
        description: 'Use this method to send photos. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: photo
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Photo to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. The photo must be at most 10 MB in size. The photo''s width and height must not exceed 10000 in total. Width and height ratio must be at most 20. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Photo caption (may also be used when resending photos by file_id), 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the photo caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendAudio
        description: "Use this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\nFor sending voice messages, use the sendVoice method instead."
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: audio
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Audio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Audio caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the audio caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Duration of the audio in seconds'
            -
                name: performer
                types:
                    - string
                optional: true
                description: Performer
            -
                name: title
                types:
                    - string
                optional: true
                description: 'Track name'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendDocument
        description: 'Use this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: document
                types:
                    - InputFile
                    - string
                optional: false
                description: 'File to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Document caption (may also be used when resending documents by file_id), 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the document caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: disable_content_type_detection
                types:
                    - bool
                optional: true
                description: 'Disables automatic server-side content type detection for files uploaded using multipart/form-data'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendVideo
        description: 'Use this method to send video files, Telegram clients support mp4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: video
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Video to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data. More info on Sending Files »'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Duration of sent video in seconds'
            -
                name: width
                types:
                    - int
                optional: true
                description: 'Video width'
            -
                name: height
                types:
                    - int
                optional: true
                description: 'Video height'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Video caption (may also be used when resending videos by file_id), 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the video caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: supports_streaming
                types:
                    - bool
                optional: true
                description: 'Pass True, if the uploaded video is suitable for streaming'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendAnimation
        description: 'Use this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent Message is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: animation
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Animation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data. More info on Sending Files »'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Duration of sent animation in seconds'
            -
                name: width
                types:
                    - int
                optional: true
                description: 'Animation width'
            -
                name: height
                types:
                    - int
                optional: true
                description: 'Animation height'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Animation caption (may also be used when resending animation by file_id), 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the animation caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendVoice
        description: 'Use this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: voice
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Audio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'Voice message caption, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the voice message caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Duration of the voice message in seconds'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendVideoNote
        description: 'As of v.4.0, Telegram clients support rounded square mp4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: video_note
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Video note to send. Pass a file_id as String to send a video note that exists on the Telegram servers (recommended) or upload a new video using multipart/form-data. More info on Sending Files ». Sending video notes by a URL is currently unsupported'
            -
                name: duration
                types:
                    - int
                optional: true
                description: 'Duration of sent video in seconds'
            -
                name: length
                types:
                    - int
                optional: true
                description: 'Video width and height, i.e. diameter of the video message'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail''s width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can''t be reused and can be only uploaded as a new file, so you can pass “attach://<file_attach_name>” if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More info on Sending Files »'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendMediaGroup
        description: 'Use this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of Messages that were sent is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: media
                types:
                    - 'Array<InputMediaAudio, InputMediaDocument, InputMediaPhoto, InputMediaVideo>'
                optional: false
                description: 'A JSON-serialized array describing messages to be sent, must include 2-10 items'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends messages silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the messages are a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
        return_types:
            - Array<Message>
    -
        name: sendLocation
        description: 'Use this method to send point on the map. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of the location'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of the location'
            -
                name: horizontal_accuracy
                types:
                    - float
                optional: true
                description: 'The radius of uncertainty for the location, measured in meters; 0-1500'
            -
                name: live_period
                types:
                    - int
                optional: true
                description: 'Period in seconds for which the location will be updated (see Live Locations, should be between 60 and 86400.'
            -
                name: heading
                types:
                    - int
                optional: true
                description: 'For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.'
            -
                name: proximity_alert_radius
                types:
                    - int
                optional: true
                description: 'For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: editMessageLiveLocation
        description: 'Use this method to edit live location messages. A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message to edit'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of new location'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of new location'
            -
                name: horizontal_accuracy
                types:
                    - float
                optional: true
                description: 'The radius of uncertainty for the location, measured in meters; 0-1500'
            -
                name: heading
                types:
                    - int
                optional: true
                description: 'Direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.'
            -
                name: proximity_alert_radius
                types:
                    - int
                optional: true
                description: 'Maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for a new inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: stopMessageLiveLocation
        description: 'Use this method to stop updating a live location message before live_period expires. On success, if the message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message with live location to stop'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for a new inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: sendVenue
        description: 'Use this method to send information about a venue. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: latitude
                types:
                    - float
                optional: false
                description: 'Latitude of the venue'
            -
                name: longitude
                types:
                    - float
                optional: false
                description: 'Longitude of the venue'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Name of the venue'
            -
                name: address
                types:
                    - string
                optional: false
                description: 'Address of the venue'
            -
                name: foursquare_id
                types:
                    - string
                optional: true
                description: 'Foursquare identifier of the venue'
            -
                name: foursquare_type
                types:
                    - string
                optional: true
                description: 'Foursquare type of the venue, if known. (For example, “arts_entertainment/default”, “arts_entertainment/aquarium” or “food/icecream”.)'
            -
                name: google_place_id
                types:
                    - string
                optional: true
                description: 'Google Places identifier of the venue'
            -
                name: google_place_type
                types:
                    - string
                optional: true
                description: 'Google Places type of the venue. (See supported types.)'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendContact
        description: 'Use this method to send phone contacts. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: phone_number
                types:
                    - string
                optional: false
                description: 'Contact''s phone number'
            -
                name: first_name
                types:
                    - string
                optional: false
                description: 'Contact''s first name'
            -
                name: last_name
                types:
                    - string
                optional: true
                description: 'Contact''s last name'
            -
                name: vcard
                types:
                    - string
                optional: true
                description: 'Additional data about the contact in the form of a vCard, 0-2048 bytes'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendPoll
        description: 'Use this method to send a native poll. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: question
                types:
                    - string
                optional: false
                description: 'Poll question, 1-300 characters'
            -
                name: options
                types:
                    - Array<string>
                optional: false
                description: 'A JSON-serialized list of answer options, 2-10 strings 1-100 characters each'
            -
                name: is_anonymous
                types:
                    - bool
                optional: true
                description: 'True, if the poll needs to be anonymous, defaults to True'
            -
                name: type
                types:
                    - string
                optional: true
                description: 'Poll type, “quiz” or “regular”, defaults to “regular”'
            -
                name: allows_multiple_answers
                types:
                    - bool
                optional: true
                description: 'True, if the poll allows multiple answers, ignored for polls in quiz mode, defaults to False'
            -
                name: correct_option_id
                types:
                    - int
                optional: true
                description: '0-based identifier of the correct answer option, required for polls in quiz mode'
            -
                name: explanation
                types:
                    - string
                optional: true
                description: 'Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters with at most 2 line feeds after entities parsing'
            -
                name: explanation_parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the explanation. See formatting options for more details.'
            -
                name: explanation_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the poll explanation, which can be specified instead of parse_mode'
            -
                name: open_period
                types:
                    - int
                optional: true
                description: 'Amount of time in seconds the poll will be active after creation, 5-600. Can''t be used together with close_date.'
            -
                name: close_date
                types:
                    - int
                optional: true
                description: 'Point in time (Unix timestamp) when the poll will be automatically closed. Must be at least 5 and no more than 600 seconds in the future. Can''t be used together with open_period.'
            -
                name: is_closed
                types:
                    - bool
                optional: true
                description: 'Pass True, if the poll needs to be immediately closed. This can be useful for poll preview.'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendDice
        description: 'Use this method to send an animated emoji that will display a random value. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: emoji
                types:
                    - string
                optional: true
                description: 'Emoji on which the dice throw animation is based. Currently, must be one of “”, “”, “”, “”, “”, or “”. Dice can have values 1-6 for “”, “” and “”, values 1-5 for “” and “”, and values 1-64 for “”. Defaults to “”'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: sendChatAction
        description: "Use this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns True on success.\nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive."
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: action
                types:
                    - string
                optional: false
                description: 'Type of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_voice or upload_voice for voice notes, upload_document for general files, choose_sticker for stickers, find_location for location data, record_video_note or upload_video_note for video notes.'
        return_types:
            - bool
    -
        name: getUserProfilePhotos
        description: 'Use this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: offset
                types:
                    - int
                optional: true
                description: 'Sequential number of the first photo to be returned. By default, all photos are returned.'
            -
                name: limit
                types:
                    - int
                optional: true
                description: 'Limits the number of photos to be retrieved. Values between 1-100 are accepted. Defaults to 100.'
        return_types:
            - UserProfilePhotos
    -
        name: getFile
        description: 'Use this method to get basic info about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>, where <file_path> is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.'
        fields:
            -
                name: file_id
                types:
                    - string
                optional: false
                description: 'File identifier to get info about'
        return_types:
            - File
    -
        name: banChatMember
        description: 'Use this method to ban a user in a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the chat on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: until_date
                types:
                    - int
                optional: true
                description: 'Date when the user will be unbanned, unix time. If user is banned for more than 366 days or less than 30 seconds from the current time they are considered to be banned forever. Applied for supergroups and channels only.'
            -
                name: revoke_messages
                types:
                    - bool
                optional: true
                description: 'Pass True to delete all messages from the chat for the user that is being removed. If False, the user will be able to see messages in the group that were sent before the user was removed. Always True for supergroups and channels.'
        return_types:
            - bool
    -
        name: unbanChatMember
        description: 'Use this method to unban a previously banned user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be removed from the chat. If you don''t want this, use the parameter only_if_banned. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target group or username of the target supergroup or channel (in the format @username)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: only_if_banned
                types:
                    - bool
                optional: true
                description: 'Do nothing if the user is not banned'
        return_types:
            - bool
    -
        name: restrictChatMember
        description: 'Use this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate administrator rights. Pass True for all permissions to lift restrictions from a user. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: permissions
                types:
                    - ChatPermissions
                optional: false
                description: 'A JSON-serialized object for new user permissions'
            -
                name: until_date
                types:
                    - int
                optional: true
                description: 'Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever'
        return_types:
            - bool
    -
        name: promoteChatMember
        description: 'Use this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Pass False for all boolean parameters to demote a user. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: is_anonymous
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator''s presence in the chat is hidden'
            -
                name: can_manage_chat
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can access the chat event log, chat statistics, message statistics in channels, see channel members, see anonymous administrators in supergroups and ignore slow mode. Implied by any other administrator privilege'
            -
                name: can_post_messages
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can create channel posts, channels only'
            -
                name: can_edit_messages
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can edit messages of other users and can pin messages, channels only'
            -
                name: can_delete_messages
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can delete messages of other users'
            -
                name: can_manage_voice_chats
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can manage voice chats'
            -
                name: can_restrict_members
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can restrict, ban or unban chat members'
            -
                name: can_promote_members
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can add new administrators with a subset of their own privileges or demote administrators that he has promoted, directly or indirectly (promoted by administrators that were appointed by him)'
            -
                name: can_change_info
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can change chat title, photo and other settings'
            -
                name: can_invite_users
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can invite new users to the chat'
            -
                name: can_pin_messages
                types:
                    - bool
                optional: true
                description: 'Pass True, if the administrator can pin messages, supergroups only'
        return_types:
            - bool
    -
        name: setChatAdministratorCustomTitle
        description: 'Use this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
            -
                name: custom_title
                types:
                    - string
                optional: false
                description: 'New custom title for the administrator; 0-16 characters, emoji are not allowed'
        return_types:
            - bool
    -
        name: banChatSenderChat
        description: 'Use this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won''t be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: sender_chat_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target sender chat'
        return_types:
            - bool
    -
        name: unbanChatSenderChat
        description: 'Use this method to unban a previously banned channel chat in a supergroup or channel. The bot must be an administrator for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: sender_chat_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target sender chat'
        return_types:
            - bool
    -
        name: setChatPermissions
        description: 'Use this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the can_restrict_members administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
            -
                name: permissions
                types:
                    - ChatPermissions
                optional: false
                description: 'A JSON-serialized object for new default chat permissions'
        return_types:
            - bool
    -
        name: exportChatInviteLink
        description: 'Use this method to generate a new primary invite link for a chat; any previously generated primary link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the new invite link as String on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
        return_types:
            - string
    -
        name: createChatInviteLink
        description: 'Use this method to create an additional invite link for a chat. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. The link can be revoked using the method revokeChatInviteLink. Returns the new invite link as ChatInviteLink object.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: name
                types:
                    - string
                optional: true
                description: 'Invite link name; 0-32 characters'
            -
                name: expire_date
                types:
                    - int
                optional: true
                description: 'Point in time (Unix timestamp) when the link will expire'
            -
                name: member_limit
                types:
                    - int
                optional: true
                description: 'Maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999'
            -
                name: creates_join_request
                types:
                    - bool
                optional: true
                description: 'True, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can''t be specified'
        return_types:
            - ChatInviteLink
    -
        name: editChatInviteLink
        description: 'Use this method to edit a non-primary invite link created by the bot. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the edited invite link as a ChatInviteLink object.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: invite_link
                types:
                    - string
                optional: false
                description: 'The invite link to edit'
            -
                name: name
                types:
                    - string
                optional: true
                description: 'Invite link name; 0-32 characters'
            -
                name: expire_date
                types:
                    - int
                optional: true
                description: 'Point in time (Unix timestamp) when the link will expire'
            -
                name: member_limit
                types:
                    - int
                optional: true
                description: 'Maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999'
            -
                name: creates_join_request
                types:
                    - bool
                optional: true
                description: 'True, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can''t be specified'
        return_types:
            - ChatInviteLink
    -
        name: revokeChatInviteLink
        description: 'Use this method to revoke an invite link created by the bot. If the primary link is revoked, a new link is automatically generated. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the revoked invite link as ChatInviteLink object.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier of the target chat or username of the target channel (in the format @channelusername)'
            -
                name: invite_link
                types:
                    - string
                optional: false
                description: 'The invite link to revoke'
        return_types:
            - ChatInviteLink
    -
        name: approveChatJoinRequest
        description: 'Use this method to approve a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
        return_types:
            - bool
    -
        name: declineChatJoinRequest
        description: 'Use this method to decline a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
        return_types:
            - bool
    -
        name: setChatPhoto
        description: 'Use this method to set a new profile photo for the chat. Photos can''t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: photo
                types:
                    - InputFile
                optional: false
                description: 'New chat photo, uploaded using multipart/form-data'
        return_types:
            - bool
    -
        name: deleteChatPhoto
        description: 'Use this method to delete a chat photo. Photos can''t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
        return_types:
            - bool
    -
        name: setChatTitle
        description: 'Use this method to change the title of a chat. Titles can''t be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'New chat title, 1-255 characters'
        return_types:
            - bool
    -
        name: setChatDescription
        description: 'Use this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: description
                types:
                    - string
                optional: true
                description: 'New chat description, 0-255 characters'
        return_types:
            - bool
    -
        name: pinChatMessage
        description: 'Use this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the ''can_pin_messages'' administrator right in a supergroup or ''can_edit_messages'' administrator right in a channel. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Identifier of a message to pin'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Pass True, if it is not necessary to send a notification to all chat members about the new pinned message. Notifications are always disabled in channels and private chats.'
        return_types:
            - bool
    -
        name: unpinChatMessage
        description: 'Use this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the ''can_pin_messages'' administrator right in a supergroup or ''can_edit_messages'' administrator right in a channel. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Identifier of a message to unpin. If not specified, the most recent pinned message (by sending date) will be unpinned.'
        return_types:
            - bool
    -
        name: unpinAllChatMessages
        description: 'Use this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the ''can_pin_messages'' administrator right in a supergroup or ''can_edit_messages'' administrator right in a channel. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
        return_types:
            - bool
    -
        name: leaveChat
        description: 'Use this method for your bot to leave a group, supergroup or channel. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)'
        return_types:
            - bool
    -
        name: getChat
        description: 'Use this method to get up to date information about the chat (current name of the user for one-on-one conversations, current username of a user, group or channel, etc.). Returns a Chat object on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)'
        return_types:
            - Chat
    -
        name: getChatAdministrators
        description: 'Use this method to get a list of administrators in a chat. On success, returns an Array of ChatMember objects that contains information about all chat administrators except other bots. If the chat is a group or a supergroup and no administrators were appointed, only the creator will be returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)'
        return_types:
            - Array<ChatMember>
    -
        name: getChatMemberCount
        description: 'Use this method to get the number of members in a chat. Returns Int on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)'
        return_types:
            - int
    -
        name: getChatMember
        description: 'Use this method to get information about a member of a chat. Returns a ChatMember object on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Unique identifier of the target user'
        return_types:
            - ChatMember
    -
        name: setChatStickerSet
        description: 'Use this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
            -
                name: sticker_set_name
                types:
                    - string
                optional: false
                description: 'Name of the sticker set to be set as the group sticker set'
        return_types:
            - bool
    -
        name: deleteChatStickerSet
        description: 'Use this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)'
        return_types:
            - bool
    -
        name: answerCallbackQuery
        description: 'Use this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.'
        fields:
            -
                name: callback_query_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for the query to be answered'
            -
                name: text
                types:
                    - string
                optional: true
                description: 'Text of the notification. If not specified, nothing will be shown to the user, 0-200 characters'
            -
                name: show_alert
                types:
                    - bool
                optional: true
                description: 'If True, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to false.'
            -
                name: url
                types:
                    - string
                optional: true
                description: 'URL that will be opened by the user''s client. If you have created a Game and accepted the conditions via @Botfather, specify the URL that opens your game — note that this will only work if the query comes from a callback_game button.Otherwise, you may use links like t.me/your_bot?start=XXXX that open your bot with a parameter.'
            -
                name: cache_time
                types:
                    - int
                optional: true
                description: 'The maximum amount of time in seconds that the result of the callback query may be cached client-side. Telegram apps will support caching starting in version 3.14. Defaults to 0.'
        return_types:
            - bool
    -
        name: setMyCommands
        description: 'Use this method to change the list of the bot''s commands. See https://core.telegram.org/bots#commands for more details about bot commands. Returns True on success.'
        fields:
            -
                name: commands
                types:
                    - Array<BotCommand>
                optional: false
                description: 'A JSON-serialized list of bot commands to be set as the list of the bot''s commands. At most 100 commands can be specified.'
            -
                name: scope
                types:
                    - BotCommandScope
                optional: true
                description: 'A JSON-serialized object, describing scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.'
            -
                name: language_code
                types:
                    - string
                optional: true
                description: 'A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands'
        return_types:
            - bool
    -
        name: deleteMyCommands
        description: 'Use this method to delete the list of the bot''s commands for the given scope and user language. After deletion, higher level commands will be shown to affected users. Returns True on success.'
        fields:
            -
                name: scope
                types:
                    - BotCommandScope
                optional: true
                description: 'A JSON-serialized object, describing scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.'
            -
                name: language_code
                types:
                    - string
                optional: true
                description: 'A two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands'
        return_types:
            - bool
    -
        name: getMyCommands
        description: 'Use this method to get the current list of the bot''s commands for the given scope and user language. Returns Array of BotCommand on success. If commands aren''t set, an empty list is returned.'
        fields:
            -
                name: scope
                types:
                    - BotCommandScope
                optional: true
                description: 'A JSON-serialized object, describing scope of users. Defaults to BotCommandScopeDefault.'
            -
                name: language_code
                types:
                    - string
                optional: true
                description: 'A two-letter ISO 639-1 language code or an empty string'
        return_types:
            - Array<BotCommand>
    -
        name: editMessageText
        description: 'Use this method to edit text and game messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message to edit'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: text
                types:
                    - string
                optional: false
                description: 'New text of the message, 1-4096 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the message text. See formatting options for more details.'
            -
                name: entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in message text, which can be specified instead of parse_mode'
            -
                name: disable_web_page_preview
                types:
                    - bool
                optional: true
                description: 'Disables link previews for links in this message'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for an inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: editMessageCaption
        description: 'Use this method to edit captions of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message to edit'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: caption
                types:
                    - string
                optional: true
                description: 'New caption of the message, 0-1024 characters after entities parsing'
            -
                name: parse_mode
                types:
                    - string
                optional: true
                description: 'Mode for parsing entities in the message caption. See formatting options for more details.'
            -
                name: caption_entities
                types:
                    - Array<MessageEntity>
                optional: true
                description: 'A JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for an inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: editMessageMedia
        description: 'Use this method to edit animation, audio, document, photo, or video messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can''t be uploaded; use a previously uploaded file via its file_id or specify a URL. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message to edit'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: media
                types:
                    - InputMedia
                optional: false
                description: 'A JSON-serialized object for a new media content of the message'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for a new inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: editMessageReplyMarkup
        description: 'Use this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the message to edit'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for an inline keyboard.'
        return_types:
            - Message
            - bool
    -
        name: stopPoll
        description: 'Use this method to stop a poll which was sent by the bot. On success, the stopped Poll is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Identifier of the original message with the poll'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for a new message inline keyboard.'
        return_types:
            - Poll
    -
        name: deleteMessage
        description: 'Use this method to delete a message, including service messages, with the following limitations:- A message can only be deleted if it was sent less than 48 hours ago.- A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.- Bots can delete outgoing messages in private chats, groups, and supergroups.- Bots can delete incoming messages in private chats.- Bots granted can_post_messages permissions can delete outgoing messages in channels.- If the bot is an administrator of a group, it can delete any message there.- If the bot has can_delete_messages permission in a supergroup or a channel, it can delete any message there.Returns True on success.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: message_id
                types:
                    - int
                optional: false
                description: 'Identifier of the message to delete'
        return_types:
            - bool
    -
        name: sendSticker
        description: 'Use this method to send static .WEBP or animated .TGS stickers. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: sticker
                types:
                    - InputFile
                    - string
                optional: false
                description: 'Sticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .WEBP file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                    - ReplyKeyboardMarkup
                    - ReplyKeyboardRemove
                    - ForceReply
                optional: true
                description: 'Additional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove reply keyboard or to force a reply from the user.'
        return_types:
            - Message
    -
        name: getStickerSet
        description: 'Use this method to get a sticker set. On success, a StickerSet object is returned.'
        fields:
            -
                name: name
                types:
                    - string
                optional: false
                description: 'Name of the sticker set'
        return_types:
            - StickerSet
    -
        name: uploadStickerFile
        description: 'Use this method to upload a .PNG file with a sticker for later use in createNewStickerSet and addStickerToSet methods (can be used multiple times). Returns the uploaded File on success.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier of sticker file owner'
            -
                name: png_sticker
                types:
                    - InputFile
                optional: false
                description: 'PNG image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. More info on Sending Files »'
        return_types:
            - File
    -
        name: createNewStickerSet
        description: 'Use this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. You must use exactly one of the fields png_sticker or tgs_sticker. Returns True on success.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier of created sticker set owner'
            -
                name: name
                types:
                    - string
                optional: false
                description: 'Short name of sticker set, to be used in t.me/addstickers/ URLs (e.g., animals). Can contain only english letters, digits and underscores. Must begin with a letter, can''t contain consecutive underscores and must end in “_by_<bot username>”. <bot_username> is case insensitive. 1-64 characters.'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Sticker set title, 1-64 characters'
            -
                name: png_sticker
                types:
                    - InputFile
                    - string
                optional: true
                description: 'PNG image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: tgs_sticker
                types:
                    - InputFile
                optional: true
                description: 'TGS animation with the sticker, uploaded using multipart/form-data. See https://core.telegram.org/animated_stickers#technical-requirements for technical requirements'
            -
                name: emojis
                types:
                    - string
                optional: false
                description: 'One or more emoji corresponding to the sticker'
            -
                name: contains_masks
                types:
                    - bool
                optional: true
                description: 'Pass True, if a set of mask stickers should be created'
            -
                name: mask_position
                types:
                    - MaskPosition
                optional: true
                description: 'A JSON-serialized object for position where the mask should be placed on faces'
        return_types:
            - bool
    -
        name: addStickerToSet
        description: 'Use this method to add a new sticker to a set created by the bot. You must use exactly one of the fields png_sticker or tgs_sticker. Animated stickers can be added to animated sticker sets and only to them. Animated sticker sets can have up to 50 stickers. Static sticker sets can have up to 120 stickers. Returns True on success.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier of sticker set owner'
            -
                name: name
                types:
                    - string
                optional: false
                description: 'Sticker set name'
            -
                name: png_sticker
                types:
                    - InputFile
                    - string
                optional: true
                description: 'PNG image with the sticker, must be up to 512 kilobytes in size, dimensions must not exceed 512px, and either width or height must be exactly 512px. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files »'
            -
                name: tgs_sticker
                types:
                    - InputFile
                optional: true
                description: 'TGS animation with the sticker, uploaded using multipart/form-data. See https://core.telegram.org/animated_stickers#technical-requirements for technical requirements'
            -
                name: emojis
                types:
                    - string
                optional: false
                description: 'One or more emoji corresponding to the sticker'
            -
                name: mask_position
                types:
                    - MaskPosition
                optional: true
                description: 'A JSON-serialized object for position where the mask should be placed on faces'
        return_types:
            - bool
    -
        name: setStickerPositionInSet
        description: 'Use this method to move a sticker in a set created by the bot to a specific position. Returns True on success.'
        fields:
            -
                name: sticker
                types:
                    - string
                optional: false
                description: 'File identifier of the sticker'
            -
                name: position
                types:
                    - int
                optional: false
                description: 'New sticker position in the set, zero-based'
        return_types:
            - bool
    -
        name: deleteStickerFromSet
        description: 'Use this method to delete a sticker from a set created by the bot. Returns True on success.'
        fields:
            -
                name: sticker
                types:
                    - string
                optional: false
                description: 'File identifier of the sticker'
        return_types:
            - bool
    -
        name: setStickerSetThumb
        description: 'Use this method to set the thumbnail of a sticker set. Animated thumbnails can be set for animated sticker sets only. Returns True on success.'
        fields:
            -
                name: name
                types:
                    - string
                optional: false
                description: 'Sticker set name'
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier of the sticker set owner'
            -
                name: thumb
                types:
                    - InputFile
                    - string
                optional: true
                description: 'A PNG image with the thumbnail, must be up to 128 kilobytes in size and have width and height exactly 100px, or a TGS animation with the thumbnail up to 32 kilobytes in size; see https://core.telegram.org/animated_stickers#technical-requirements for animated sticker technical requirements. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More info on Sending Files ». Animated sticker set thumbnail can''t be uploaded via HTTP URL.'
        return_types:
            - bool
    -
        name: answerInlineQuery
        description: 'Use this method to send answers to an inline query. On success, True is returned.No more than 50 results per query are allowed.'
        fields:
            -
                name: inline_query_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for the answered query'
            -
                name: results
                types:
                    - Array<InlineQueryResult>
                optional: false
                description: 'A JSON-serialized array of results for the inline query'
            -
                name: cache_time
                types:
                    - int
                optional: true
                description: 'The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.'
            -
                name: is_personal
                types:
                    - bool
                optional: true
                description: 'Pass True, if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query'
            -
                name: next_offset
                types:
                    - string
                optional: true
                description: 'Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don''t support pagination. Offset length can''t exceed 64 bytes.'
            -
                name: switch_pm_text
                types:
                    - string
                optional: true
                description: 'If passed, clients will display a button with specified text that switches the user to a private chat with the bot and sends the bot a start message with the parameter switch_pm_parameter'
            -
                name: switch_pm_parameter
                types:
                    - string
                optional: true
                description: 'Deep-linking parameter for the /start message sent to the bot when user presses the switch button. 1-64 characters, only A-Z, a-z, 0-9, _ and - are allowed.Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a ''Connect your YouTube account'' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an OAuth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot''s inline capabilities.'
        return_types:
            - bool
    -
        name: sendInvoice
        description: 'Use this method to send invoices. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                    - string
                optional: false
                description: 'Unique identifier for the target chat or username of the target channel (in the format @channelusername)'
            -
                name: title
                types:
                    - string
                optional: false
                description: 'Product name, 1-32 characters'
            -
                name: description
                types:
                    - string
                optional: false
                description: 'Product description, 1-255 characters'
            -
                name: payload
                types:
                    - string
                optional: false
                description: 'Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.'
            -
                name: provider_token
                types:
                    - string
                optional: false
                description: 'Payments provider token, obtained via Botfather'
            -
                name: currency
                types:
                    - string
                optional: false
                description: 'Three-letter ISO 4217 currency code, see more on currencies'
            -
                name: prices
                types:
                    - Array<LabeledPrice>
                optional: false
                description: 'Price breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)'
            -
                name: max_tip_amount
                types:
                    - int
                optional: true
                description: 'The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0'
            -
                name: suggested_tip_amounts
                types:
                    - Array<int>
                optional: true
                description: 'A JSON-serialized array of suggested amounts of tips in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.'
            -
                name: start_parameter
                types:
                    - string
                optional: true
                description: 'Unique deep-linking parameter. If left empty, forwarded copies of the sent message will have a Pay button, allowing multiple users to pay directly from the forwarded message, using the same invoice. If non-empty, forwarded copies of the sent message will have a URL button with a deep link to the bot (instead of a Pay button), with the value used as the start parameter'
            -
                name: provider_data
                types:
                    - string
                optional: true
                description: 'A JSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.'
            -
                name: photo_url
                types:
                    - string
                optional: true
                description: 'URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.'
            -
                name: photo_size
                types:
                    - int
                optional: true
                description: 'Photo size'
            -
                name: photo_width
                types:
                    - int
                optional: true
                description: 'Photo width'
            -
                name: photo_height
                types:
                    - int
                optional: true
                description: 'Photo height'
            -
                name: need_name
                types:
                    - bool
                optional: true
                description: 'Pass True, if you require the user''s full name to complete the order'
            -
                name: need_phone_number
                types:
                    - bool
                optional: true
                description: 'Pass True, if you require the user''s phone number to complete the order'
            -
                name: need_email
                types:
                    - bool
                optional: true
                description: 'Pass True, if you require the user''s email address to complete the order'
            -
                name: need_shipping_address
                types:
                    - bool
                optional: true
                description: 'Pass True, if you require the user''s shipping address to complete the order'
            -
                name: send_phone_number_to_provider
                types:
                    - bool
                optional: true
                description: 'Pass True, if user''s phone number should be sent to provider'
            -
                name: send_email_to_provider
                types:
                    - bool
                optional: true
                description: 'Pass True, if user''s email address should be sent to provider'
            -
                name: is_flexible
                types:
                    - bool
                optional: true
                description: 'Pass True, if the final price depends on the shipping method'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for an inline keyboard. If empty, one ''Pay total price'' button will be shown. If not empty, the first button must be a Pay button.'
        return_types:
            - Message
    -
        name: answerShippingQuery
        description: 'If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.'
        fields:
            -
                name: shipping_query_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for the query to be answered'
            -
                name: ok
                types:
                    - bool
                optional: false
                description: 'Specify True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)'
            -
                name: shipping_options
                types:
                    - Array<ShippingOption>
                optional: true
                description: 'Required if ok is True. A JSON-serialized array of available shipping options.'
            -
                name: error_message
                types:
                    - string
                optional: true
                description: 'Required if ok is False. Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable''). Telegram will display this message to the user.'
        return_types:
            - bool
    -
        name: answerPreCheckoutQuery
        description: 'Once the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the field pre_checkout_query. Use this method to respond to such pre-checkout queries. On success, True is returned. Note: The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.'
        fields:
            -
                name: pre_checkout_query_id
                types:
                    - string
                optional: false
                description: 'Unique identifier for the query to be answered'
            -
                name: ok
                types:
                    - bool
                optional: false
                description: 'Specify True if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use False if there are any problems.'
            -
                name: error_message
                types:
                    - string
                optional: true
                description: 'Required if ok is False. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. "Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!"). Telegram will display this message to the user.'
        return_types:
            - bool
    -
        name: setPassportDataErrors
        description: "Informs a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns True on success.\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues."
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier'
            -
                name: errors
                types:
                    - Array<PassportElementError>
                optional: false
                description: 'A JSON-serialized array describing the errors'
        return_types:
            - bool
    -
        name: sendGame
        description: 'Use this method to send a game. On success, the sent Message is returned.'
        fields:
            -
                name: chat_id
                types:
                    - int
                optional: false
                description: 'Unique identifier for the target chat'
            -
                name: game_short_name
                types:
                    - string
                optional: false
                description: 'Short name of the game, serves as the unique identifier for the game. Set up your games via Botfather.'
            -
                name: disable_notification
                types:
                    - bool
                optional: true
                description: 'Sends the message silently. Users will receive a notification with no sound.'
            -
                name: reply_to_message_id
                types:
                    - int
                optional: true
                description: 'If the message is a reply, ID of the original message'
            -
                name: allow_sending_without_reply
                types:
                    - bool
                optional: true
                description: 'Pass True, if the message should be sent even if the specified replied-to message is not found'
            -
                name: reply_markup
                types:
                    - InlineKeyboardMarkup
                optional: true
                description: 'A JSON-serialized object for an inline keyboard. If empty, one ''Play game_title'' button will be shown. If not empty, the first button must launch the game.'
        return_types:
            - Message
    -
        name: setGameScore
        description: 'Use this method to set the score of the specified user in a game message. On success, if the message is not an inline message, the Message is returned, otherwise True is returned. Returns an error, if the new score is not greater than the user''s current score in the chat and force is False.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'User identifier'
            -
                name: score
                types:
                    - int
                optional: false
                description: 'New score, must be non-negative'
            -
                name: force
                types:
                    - bool
                optional: true
                description: 'Pass True, if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters'
            -
                name: disable_edit_message
                types:
                    - bool
                optional: true
                description: 'Pass True, if the game message should not be automatically edited to include the current scoreboard'
            -
                name: chat_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the sent message'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
        return_types:
            - Message
            - bool
    -
        name: getGameHighScores
        description: 'Use this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. On success, returns an Array of GameHighScore objects.'
        fields:
            -
                name: user_id
                types:
                    - int
                optional: false
                description: 'Target user id'
            -
                name: chat_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Unique identifier for the target chat'
            -
                name: message_id
                types:
                    - int
                optional: true
                description: 'Required if inline_message_id is not specified. Identifier of the sent message'
            -
                name: inline_message_id
                types:
                    - string
                optional: true
                description: 'Required if chat_id and message_id are not specified. Identifier of the inline message'
        return_types:
            - Array<GameHighScore>
